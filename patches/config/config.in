#############################################################################
#
# NOTE : it is fairly important that changes to this file consider their
#        effect on other platforms and default setups.  If you can, only
#        add to the file,  changing the name of a variable will break
#        many configurations.
#
#############################################################################

mainmenu_name "uClinux Application Configuration"

#############################################################################
source ../config.luna.hint.in

mainmenu_option next_comment
comment 'Core Applications'
bool 'init'				CONFIG_USER_INIT_INIT
bool '  enable console shell'		CONFIG_USER_INIT_CONSOLE_SH
bool '  execute firewall rules'		CONFIG_USER_INIT_RUN_FIREWALL
comment 'Shell Program'
bool 'Sash'		CONFIG_USER_SASH_SH 
bool 'minix-shell'	CONFIG_USER_SH_SH 
bool 'nwsh'		CONFIG_USER_NWSH_SH 
bool 'bash'		CONFIG_USER_BASH_BASH 
bool 'Other'		CONFIG_USER_OTHER_SH 

comment ''
if [ "$CONFIG_USER_SASH_SH" = "y" ]; then
	bool 'simple history (sash)'		CONFIG_USER_SASH_HISTORY
fi
bool 'reboot (sash)'		CONFIG_USER_SASH_REBOOT
bool 'shutdown (sash)'		CONFIG_USER_SASH_SHUTDOWN
bool 'expand'			CONFIG_USER_INIT_EXPAND
if [ "$CONFIG_USER_INIT_EXPAND" = "y" ]; then
	bool '  expand should not write zeroes'	CONFIG_USER_INIT_EXPAND_NOZEROES
fi
bool 'version'			CONFIG_USER_VERSION_VERSION
bool 'login'			CONFIG_USER_LOGIN_LOGIN
bool '  old passwords'		CONFIG_USER_OLD_PASSWORDS
##bool 'menu-driven CLI'		CONFIG_USER_MENU_CLI
##add by xl_yue for supporting commands input
bool 'Command Line Interface'	CONFIG_USER_CLI
if [ "$CONFIG_USER_CLI" = "y" ]; then
choice 'Cli_Mode' \
   "Menu_Cli CONFIG_USER_MENU_CLI \
    Command_Cli CONFIG_USER_CMD_CLI" Menu_Cli
fi

bool 'agetty'			CONFIG_USER_AGETTY_AGETTY
bool 'gettyd'			CONFIG_USER_GETTYD_GETTYD
bool 'passwd'			CONFIG_USER_LOGIN_PASSWD
bool 'cron'			CONFIG_USER_CRON_CRON
bool 'watchdog'			CONFIG_USER_WATCHDOG_WDG

comment 'Real Time Clock'
bool 'hwclock'			CONFIG_USER_HWCLOCK_HWCLOCK
bool 'rtc m41t11'		CONFIG_USER_RTC_M41T11
bool 'rtc ds1302'		CONFIG_USER_RTC_DS1302

comment 'Vixie-cron'
bool 'cron'			CONFIG_USER_VIXIECRON_CRON
bool 'crontab'			CONFIG_USER_VIXIECRON_CRONTAB

comment 'at'
bool 'at'			CONFIG_USER_AT_AT
bool 'atd'			CONFIG_USER_AT_ATD
bool 'atrun'			CONFIG_USER_AT_ATRUN

comment 'memory utility'
bool 'sfree'			CONFIG_USER_SFREE
bool 'tinymembench'		CONFIG_USER_TINYMEMBENCH

comment 'Support Realtek NFBI Daemon'
bool 'Support Realtek NFBI'   CONFIG_USER_NFBI
if [ "$CONFIG_USER_NFBI" = "y" ]; then
choice 'NFBI Mode' \
   "Master CONFIG_USER_NFBI_MASTER \
    Slave CONFIG_USER_NFBI_SLAVE" Master
if [ "$CONFIG_USER_NFBI_MASTER" = "y" ]; then
	string ' NFBI Slave FW' CONFIG_NFBI_SLAVE_FW_PATH 'fw_rtl8685SB_DSL_PHY'
fi
bool 'Support Bootcode Only'   CONFIG_USER_NFBI_BOOT_ONLY
if [ "$CONFIG_USER_NFBI_MASTER" = "y" ]; then
bool 'Support xDSL Slave' CONFIG_USER_XDSL_SLAVE
fi
fi
comment 'Support glibc timezone'
bool 'timezone'			CONFIG_USER_GLIBC_TIMEZONE

comment 'Linux Containers'
bool 'LXC'			CONFIG_USER_LXC
if [ "$CONFIG_USER_LXC" = "y" ]; then
choice 'Version'		"1.0.8		CONFIG_USER_LXC_1_0_8 \
				3.1.0		CONFIG_USER_LXC_3_1_0" 3.1.0
fi

endmenu

#############################################################################

mainmenu_option next_comment
comment 'Library Configuration'

comment 'Force build (Normally built when required)'
bool 'Build libffi'		CONFIG_LIB_LIBFFI_FORCE
bool 'Build libAES'		CONFIG_LIB_LIBAES_FORCE
bool 'Build libDES'		CONFIG_LIB_LIBDES_FORCE
bool 'Build libSSL'		CONFIG_LIB_LIBSSL_FORCE
choice 'libSSL Version'	"1.0.1c		CONFIG_LIB_LIBSSL_1_0_1C \
                               1.0.2o		CONFIG_LIB_LIBSSL_1_0_2O \
                               1.0.2s		CONFIG_LIB_LIBSSL_1_0_2S \
                               1.1.1d      CONFIG_LIB_LIBSSL_1_1_1D" 1.0.2o
bool 'Build libGMP'		CONFIG_LIB_LIBGMP_FORCE
bool 'Build libG'		CONFIG_LIB_LIBG_FORCE
bool 'Build libPAM'		CONFIG_LIB_LIBPAM_FORCE
bool 'Build libPCAP'		CONFIG_LIB_LIBPCAP_FORCE
bool 'Build libZ'		CONFIG_LIB_ZLIB_FORCE
bool 'Build libATM'		CONFIG_LIB_LIBATM_FORCE
bool 'Build libpng'		CONFIG_LIB_LIBPNG_FORCE
bool 'Build libjpeg'		CONFIG_LIB_LIBJPEG_FORCE
bool 'Build ncurses'		CONFIG_LIB_NCURSES_FORCE
bool 'Build libtermcap'		CONFIG_LIB_LIBTERMCAP_FORCE
bool 'Build libmd5'		CONFIG_LIB_LIBMD5_FORCE
bool 'Build libmnl'		CONFIG_LIB_LIBMNL_FORCE
bool 'Build libudev'		CONFIG_LIB_LIBUDEV_FORCE
bool 'Build libusb'		CONFIG_LIB_LIBUSB_FORCE
bool 'Build libxz'		CONFIG_LIB_XZ_FORCE
bool 'Build libnl'		CONFIG_LIB_LIBNL_FORCE
bool 'Build lib8226b'		CONFIG_LIB_8226B
bool 'Build lib8367'           CONFIG_LIB_8367
if [ "$CONFIG_LIB_8367" = "y" ]; then
	bool '  Enable RTL8367C series' CONFIG_LIB_DAL_RTL8367C
	bool '  Enable RTL8367D series' CONFIG_LIB_DAL_RTL8367D
fi
bool 'Build libnfnetlink'		CONFIG_LIB_LIBNFNETLINK_FORCE
bool 'Build libnetfilter_log'	CONFIG_LIB_LIBNETFILTER_LOG_FORCE
bool 'Build libnetfilter_queue'	CONFIG_LIB_LIBNETFILTER_QUEUE_FORCE
bool 'Build libnetfilter_conntrack'	CONFIG_LIB_LIBNETFILTER_CONNTRACK_FORCE
bool 'Build libnetfilter_cthelper'	CONFIG_LIB_LIBNETFILTER_CTHELPER_FORCE
bool 'Build libnetfilter_cttimeout'	CONFIG_LIB_LIBNETFILTER_CTTIMEOUT_FORCE

bool 'Libcoap'          CONFIG_LIB_COAP

bool 'Build libiconv'           CONFIG_LIB_LIBICONV
if [ "$CONFIG_LIB_LIBICONV" = "y" ]; then
	bool '	libiconv 1.14'  CONFIG_LIB_LIBICONV_1_14
	bool '	libiconv 1.15'  CONFIG_LIB_LIBICONV_1_15
fi

if [ "$CONFIG_LIB_LIBNETFILTER_LOG_FORCE" = "y" ]; then
	define_bool CONFIG_LIB_LIBNFNETLINK_FORCE y
fi

comment 'Library Configuration'
bool 'Support time zones'	CONFIG_LIB_UC_LIBC_TIMEZONE
if [ "$CONFIG_LIB_UC_LIBC_TIMEZONE" = "y" ]; then
	bool '  Always load from file'	CONFIG_LIB_UC_LIBC_TZ_FROM_FILE
fi

bool 'Build libjson-c'	CONFIG_LIB_JSON
bool 'Build libubox'	CONFIG_LIB_LIBUBOX
bool 'Build libubus'	CONFIG_LIB_UBUS
# RTK LIB
bool 'Build RTK librtk_timerlist' CONFIG_LIB_LIBRTK_TIMERLIST_FORCE

endmenu

#############################################################################

mainmenu_option next_comment

comment 'Flash Tools'
bool 'flashw'			CONFIG_USER_FLASHW_FLASHW
bool 'netflash'			CONFIG_USER_NETFLASH_NETFLASH
if [ "$CONFIG_USER_NETFLASH_NETFLASH" = "y" -a \
		"$CONFIG_USER_FLASHW_FLASHW" = "y" ]; then
	bool 'flash'			CONFIG_USER_FLASH_FLASH
fi
bool 'recover'			CONFIG_USER_RECOVER_RECOVER
if [ "$CONFIG_USER_NETFLASH_NETFLASH" = "y" \
		-o "$CONFIG_USER_RECOVER_RECOVER" = "y" ]; then
	bool '  netflash uses FTP'		CONFIG_USER_NETFLASH_WITH_FTP
	bool '  netflash recognises version' 	CONFIG_USER_NETFLASH_VERSION
	if [ "$CONFIG_USER_NETFLASH_VERSION" = "y" ]; then
		bool '  netflash accepts same version'	CONFIG_USER_NETFLASH_VERSION_ALLOW_CURRENT
		bool '  netflash accepts older version'	CONFIG_USER_NETFLASH_VERSION_ALLOW_OLDER
	fi
	bool '  netflash can decompress'	CONFIG_USER_NETFLASH_DECOMPRESS
	if [ "$CONFIG_USER_NETFLASH_DECOMPRESS" = "y" ]; then
		define_bool CONFIG_LIB_ZLIB y
		bool '  netflash auto-decompresses'	CONFIG_USER_NETFLASH_AUTODECOMPRESS
	fi
	bool '  netflash uses HMAC-MD5 signature'	CONFIG_USER_NETFLASH_HMACMD5
	if [ "$CONFIG_USER_NETFLASH_HMACMD5" = "y" ]; then
		string '  netflash HMAC-MD5 key'	CONFIG_USER_NETFLASH_HMACMD5_KEY 'HMAC-MD5 key'
	fi
	bool '  recover bios only'	CONFIG_USER_RECOVER_BIOS

	if [ "$CONFIG_USER_NETFLASH_CRYPTO" = "y" ]; then
		define_bool CONFIG_LIB_LIBAES y
		define_bool CONFIG_LIB_LIBSSL y
	fi
fi
if [ "$CONFIG_USER_RECOVER_RECOVER" = "y" ]; then
	string '  recover ethernet interface'		CONFIG_USER_RECOVER_ETHERNET_INTERFACE 'eth0'

	if [ "$CONFIG_USER_RECOVER_STATIC_TFTP" = "n" ]; then
		bool '  recover uses static server'		CONFIG_USER_RECOVER_USE_STATIC_SERVER
		if [ "$CONFIG_USER_RECOVER_USE_STATIC_SERVER" = "y" ]; then
			string '  recover static server'		CONFIG_USER_RECOVER_STATIC_SERVER '0.0.0.0'
		fi
	fi
	bool '  recover preserves existing config'	CONFIG_USER_RECOVER_PRESERVE_CONFIG_FS
fi

bool 'flashloader'		CONFIG_USER_BOOTTOOLS_FLASHLOADER
bool 'himemloader'		CONFIG_USER_BOOTTOOLS_HIMEMLOADER

comment 'MTD utils'
bool 'G3 mtd-utils'		CONFIG_USER_G3_MTD_UTILS
bool 'mtd-utils'		CONFIG_USER_MTDUTILS
dep_bool '  erase'        CONFIG_USER_MTDUTILS_ERASE $CONFIG_USER_MTDUTILS
dep_bool '  eraseall'     CONFIG_USER_MTDUTILS_ERASEALL $CONFIG_USER_MTDUTILS
dep_bool '  ftl_check'    CONFIG_USER_MTDUTILS_FTL_CHECK $CONFIG_USER_MTDUTILS
dep_bool '  ftl_format'   CONFIG_USER_MTDUTILS_FTL_FORMAT $CONFIG_USER_MTDUTILS
dep_bool '  mkfs.jffs'    CONFIG_USER_MTDUTILS_MKFSJFFS $CONFIG_USER_MTDUTILS
dep_bool '  mkfs.jffs2'    CONFIG_USER_MTDUTILS_MKFSJFFS2 $CONFIG_USER_MTDUTILS
dep_bool '  nftldump'     CONFIG_USER_MTDUTILS_NFTLDUMP $CONFIG_USER_MTDUTILS
dep_bool '  nftl_format'  CONFIG_USER_MTDUTILS_NFTL_FORMAT $CONFIG_USER_MTDUTILS
dep_bool '  nanddump'     CONFIG_USER_MTDUTILS_NANDDUMP $CONFIG_USER_MTDUTILS
dep_bool '  nandtest'     CONFIG_USER_MTDUTILS_NANDTEST $CONFIG_USER_MTDUTILS
dep_bool '  nandwrite'    CONFIG_USER_MTDUTILS_NANDWRITE $CONFIG_USER_MTDUTILS
dep_bool '  doc_loadbios' CONFIG_USER_MTDUTILS_DOC_LOADBIOS $CONFIG_USER_MTDUTILS
dep_bool '  doc_loadipl'  CONFIG_USER_MTDUTILS_DOC_LOADIPL $CONFIG_USER_MTDUTILS

endmenu

#############################################################################

mainmenu_option next_comment
comment 'Filesystem Applications'

bool 'flatfsd'			CONFIG_USER_FLATFSD_XXX
if [ "$CONFIG_USER_FLATFSD_XXX" = "y" ]; then
choice '  flatfsd storage type' "Auto     CONFIG_USER_FLATFSD_AUTO \
                         Filesystem                     CONFIG_USER_FLATFSD_USE_FLASH_FS \
                         Disklike                       CONFIG_USER_FLATFSD_DISKLIKE \
                        " Auto
bool '  Compress /etc/config to flash as required' CONFIG_USER_FLATFSD_COMPRESSED
bool '  Device has Real Time Clock' CONFIG_USER_FLATFSD_HAS_RTC
fi
bool 'mount'			CONFIG_USER_MOUNT_MOUNT
bool 'umount'			CONFIG_USER_MOUNT_UMOUNT
bool 'fdisk'			CONFIG_USER_FDISK_FDISK

comment 'EXT2'
bool 'e2fsck'			CONFIG_USER_E2FSPROGS_E2FSCK_E2FSCK
bool 'mke2fs'			CONFIG_USER_E2FSPROGS_MISC_MKE2FS
bool 'badblocks'		CONFIG_USER_E2FSPROGS_MISC_BADBLOCKS
bool 'chattr'			CONFIG_USER_E2FSPROGS_MISC_CHATTR
bool 'dumpe2fs'			CONFIG_USER_E2FSPROGS_MISC_DUMPE2FS
bool 'e2label'			CONFIG_USER_E2FSPROGS_MISC_E2LABEL
bool 'fsck'				CONFIG_USER_E2FSPROGS_MISC_FSCK
bool 'lsattr'			CONFIG_USER_E2FSPROGS_MISC_LSATTR
bool 'mklost+found'		CONFIG_USER_E2FSPROGS_MISC_MKLOST_FOUND
bool 'tune2fs'			CONFIG_USER_E2FSPROGS_MISC_TUNE2FS
bool 'uuidgen'			CONFIG_USER_E2FSPROGS_MISC_UUIDGEN
bool 'SD Card Detect'		CONFIG_USER_SDCARD_DETECT

comment 'RESIERFS'
bool 'reiserfsprogs'	CONFIG_USER_REISERFSPROGS
bool '  debugreiserfs'	CONFIG_USER_REISERFSPROGS_DEBUGRESIERFS
bool '  mkreiserfs'		CONFIG_USER_REISERFSPROGS_MKREISERFS
bool '  reiserfsck'		CONFIG_USER_REISERFSPROGS_REISERFSCK
bool '  resize_reiserfs'	 CONFIG_USER_REISERFSPROGS_RESIZE_REISERFS
bool '  unpack'			CONFIG_USER_REISERFSPROGS_UNPACK

comment 'Samba'
bool 'Samba'			CONFIG_USER_SAMBA
if [ "$CONFIG_USER_SAMBA" = "y" ]; then
choice 'Version'		"3.0.24		CONFIG_USER_SAMBA_3_0_24 \
				3.2.4		CONFIG_USER_SAMBA_3_2_4	\
				3.6.24		CONFIG_USER_SAMBA_3_6_24" 3.0.24
bool '  nmbd'			CONFIG_USER_NMBD
bool '  smbpasswd'		CONFIG_USER_SMBPASSWD

fi

comment 'SMBFS'
bool 'smbmount'			CONFIG_USER_SMBMOUNT_SMBMOUNT
bool 'smbumount'		CONFIG_USER_SMBMOUNT_SMBUMOUNT

comment 'CRAMFS'
bool 'cramfsck'			CONFIG_USER_CRAMFS_CRAMFSCK
bool 'mkcramfs'			CONFIG_USER_CRAMFS_MKCRAMFS
comment 'NTFS'
bool 'ntfs-3g'			CONFIG_USER_NTFS_NTFS3G
if [ "$CONFIG_USER_NTFS_NTFS3G" = "y" ]; then
	bool 'multibyte codepage without locale'		CONFIG_USER_MULTIBYTE_CODEPAGE
  if [ "$CONFIG_USER_MULTIBYTE_CODEPAGE" = "y" ]; then
  choice 'select codepage' \
    "CP54936-GB18030 CONFIG_USER_CP54936 \
    CP936-GB2312 CONFIG_USER_CP936 \
    CP950-BIG5 CONFIG_USER_CP950"
  fi
choice 'Version'		"2011.4.12	CONFIG_USER_NTFS_2011_04_12 \
				2016.2.22	CONFIG_USER_NTFS_2016_02_22 \
				2017.3.23	CONFIG_USER_NTFS_2017_03_23" 2016.2.22
fi
if [ "$CONFIG_USER_CRAMFS_CRAMFSCK" = "y" -o "$CONFIG_USER_CRAMFS_CRAMFSCK" = "y" ]; then
	define_bool CONFIG_LIB_ZLIB y
fi
comment 'EXFAT'
bool 'exfat'		CONFIG_USER_EXFAT
if [ "$CONFIG_USER_EXFAT" = "y" ]; then
choice 'Version'		"1.2.5	CONFIG_USER_EXFAT_1_2_5" 1.2.5
fi

comment 'SQUASHFS'
bool 'squashfs-tools 4.2'		CONFIG_USER_SQUASHFS42
endmenu

#############################################################################

mainmenu_option next_comment
comment 'Network Applications'

bool 'adapter-api'              CONFIG_USER_ADAPTER_API_ISP
if [ "$CONFIG_USER_ADAPTER_API_ISP" = "y" ]; then
	bool '  get_eth_info'     CONFIG_USER_ADAPTER_API_ETHGETINFO
	bool '  timelycheck'      CONFIG_USER_TIMELYCHECK
	bool '  test_case_isp'    CONFIG_USER_RTK_ISP_API_TEST_CASE
fi
bool 'andlink plugin'           CONFIG_USER_ANDLINK_PLUGIN
if [ "$CONFIG_USER_ANDLINK_PLUGIN" = "y" ]; then
    choice 'Choose andlink plugin API Version' "v1.1 CONFIG_USER_ANDLINK_PLUGIN_API_V11 \
            " v1.1
fi
bool 'andlink_support'          CONFIG_ANDLINK_SUPPORT
if [ "$CONFIG_ANDLINK_SUPPORT" = "y" ]; then
    choice 'Choose Andlink Version' "andlink_V2.0 CONFIG_ANDLINK_V2_SUPPORT \
                                     andlink_V3.0 CONFIG_ANDLINK_V3_SUPPORT" ANDLINK_VERSION
    if [ "$CONFIG_ANDLINK_V3_SUPPORT" = "y" ]; then
        bool '    andlink_if5 '       CONFIG_ANDLINK_IF5_SUPPORT
        bool '    andlink_if6 '       CONFIG_ANDLINK_IF6_SUPPORT
    fi
fi
bool 'arp'			CONFIG_USER_ROUTE_ARP
bool 'arping_ipoe'		CONFIG_IPOE_ARPING_SUPPORT
bool 'auto-provisioning'	CONFIG_USER_AUTO_PROVISIONING
bool 'avalanch_detect_to_ps' CONFIG_USER_AVALANCH_DETECT
if [ "$CONFIG_USER_AVALANCH_DETECT" = "y" ]; then
	define_bool     CONFIG_LIB_LIBNETFILTER_LOG y
	define_bool     CONFIG_LIB_LIBRTK_TIMERLIST y
	define_bool     CONFIG_LIB_LIBNFNETLINK y
	define_bool     CONFIG_USER_RTK_FASTPASSNF_MODULE y
fi

if [ "$CONFIG_LIB_LIBNETFILTER_LOG" = "y" ]; then
	define_bool     CONFIG_LIB_LIBNFNETLINK y
fi

bool 'aWiFi'			CONFIG_USER_AWIFI_SUPPORT
bool 'axel'			CONFIG_USER_AXEL
bool 'boa'			CONFIG_USER_BOA_SRC_BOA
# Mason Yu.
if [ "$CONFIG_USER_BOA_SRC_BOA" = "y" ]; then
	if [ "$CONFIG_MTD" = "y" -a "$CONFIG_USER_XMLCONFIG" = "n" ]; then
		choice 'CONF_ON_FILE Format' \
			"Use_XML CONFIG_USER_CONF_ON_XMLFILE \
			 Use_RAW_DATA CONFIG_USER_CONF_ON_RAWFILE" Use_RAW_DATA
	fi

	if [ "$CONFIG_USER_CONF_ON_XMLFILE" = "y" ]; then
		choice 'Save/Restore Configuration' \
			"Use_XML CONFIG_USE_XML \
			 Use_xmlconfig CONFIG_USER_XMLCONFIG" Use_XML
		bool '  Recover xmlfile format Configuration'    CONFIG_USER_RECOVER_XML_CONF
		bool '	Enable the xml backup up'	CONFIG_USER_XML_BACKUP
		bool '	Use default conf rt xml'	CONFIG_DEFAULT_CONF_ON_RT_XMLFILE
	else
		choice 'Save/Restore Configuration' \
			"Use_XML CONFIG_USE_XML \
			 Use_xmlconfig CONFIG_USER_XMLCONFIG \
			 Use_RAW_DATA CONFIG_USE_RAW_DATA" Use_XML
	fi

	bool '  boa uses SSL'	CONFIG_USER_BOA_WITH_SSL
	if [ "$CONFIG_USER_BOA_WITH_SSL" = "y" ]; then
	  choice '  Select the SSL library' "OPENSSL      CONFIG_USER_OPENSSL \
	                                   MATRIXSSL    CONFIG_USER_MATRIXSSL \
	                                   MATRIXSSL_NEW    CONFIG_USER_MATRIXSSL_NEW \
	                                  " MATRIXSSL
	  if [ "$CONFIG_USER_OPENSSL" = "y" ]; then
	         define_bool     CONFIG_LIB_LIBSSL y
	  fi
	  if [ "$CONFIG_USER_MATRIXSSL" = "y" ]; then
	         define_bool     CONFIG_LIB_LIBMATRIXSSL y
	  fi
	  if [ "$CONFIG_USER_MATRIXSSL_NEW" = "y" ]; then
	         define_bool     CONFIG_LIB_LIBMATRIXSSL_NEW y
	  fi
	fi
	bool '  xml Configuration encryption'	CONFIG_XML_ENABLE_ENCRYPT

	bool '  boa with multiple language support'	CONFIG_USER_BOA_WITH_MULTILANG
	if [ "$CONFIG_USER_BOA_WITH_MULTILANG" = "y" ]; then
	  bool '   English'		CONFIG_USER_BOA_WITH_MULTILANG_EN
	  bool '   Traditional_Chinese'	CONFIG_USER_BOA_WITH_MULTILANG_ZH_TW
	  bool '   Simplified_Chinese'	CONFIG_USER_BOA_WITH_MULTILANG_ZH_CN
	  bool '   Russian'	CONFIG_USER_BOA_WITH_MULTILANG_RU
	  if [ "$CONFIG_USER_BOA_WITH_MULTILANG_EN" = "n" -a \
	  	"$CONFIG_USER_BOA_WITH_MULTILANG_RU" = "n" -a \
	  	"$CONFIG_USER_BOA_WITH_MULTILANG_ZH_TW" = "n" -a \
		"$CONFIG_USER_BOA_WITH_MULTILANG_ZH_CN" = "n" ]; then
		define_bool   CONFIG_USER_BOA_WITH_MULTILANG_EN y
	  fi
	fi
	if [ "$CONFIG_USER_BOA_WITH_MULTILANG" = "n" ]; then
	  define_bool	CONFIG_USER_BOA_WITH_MULTILANG_EN y
	fi
	bool '  boa postSecurityFlag force check'   CONFIG_USER_POSTSECURITY_CHECK
	bool '  CMCC'     CONFIG_USER_AP_CMCC
	bool '  CU'     CONFIG_USER_AP_CU

 	choice 'web-dir' \
	"Default CONFIG_DEFAULT_WEB \
	General CONFIG_GENERAL_WEB" Default

	bool ' boa add WAN Type:IPTV'	CONFIG_SUPPORT_IPTV_APPLICATIONTYPE
	bool ' boa add WAN Type:OTT'	CONFIG_SUPPORT_OTT_APPLICATIONTYPE
	bool '  boa multi-users'	CONFIG_USER_BOA_MULTI_USER_PRIV
        bool '  boa VPN pass through'    CONFIG_USER_BOA_PRO_PASSTHROUGH
        bool '  boa add login page'    CONFIG_USER_LOGINWEB_PAGE
        bool '  boa add login page with CAPCTHA'    CONFIG_USER_LOGINWEB_CAPCTHA

fi
bool 'static config' CONFIG_STATIC_CONFIG
bool 'bpalogin'			CONFIG_USER_BPALOGIN_BPALOGIN

bool 'br2684ctl'		CONFIG_USER_BR2684CTL_BR2684CTL
bool 'brcfg'			CONFIG_USER_BRCFG_BRCFG
bool 'bridge utils'		CONFIG_USER_BRCTL_BRCTL
bool 'Open vSwitch'                     CONFIG_USER_OPENVSWITCH
if [ "$CONFIG_USER_OPENVSWITCH" = "y" ]; then
        choice '  Select OenVSwitch version'  " \
			2.11.1   CONFIG_USER_OPENVSWITCH_2_11_1 \
			2.5.8   CONFIG_USER_OPENVSWITCH_2_5_8 \
			2.5.0   CONFIG_USER_OPENVSWITCH_2_5_0 \
        " 2.5.8
fi
if [ "$CONFIG_NF_CONNTRACK_IPV4" = "y" -a "$CONFIG_NETFILTER_NETLINK" = "y" -a "$CONFIG_NF_CT_NETLINK" = "y" -a "$CONFIG_NF_CONNTRACK_EVENTS" = "y" ]; then
bool 'conntrack-tools'	CONFIG_USER_CONNTRACK_TOOLS
	if [ "$CONFIG_USER_CONNTRACK_TOOLS" = "y" ]; then
		define_bool	CONFIG_LIB_LIBNFNETLINK y
		define_bool	CONFIG_LIB_LIBNETFILTER_QUEUE y
		define_bool	CONFIG_LIB_LIBNETFILTER_CONNTRACK y
		define_bool	CONFIG_LIB_LIBMNL y
		define_bool	CONFIG_LIB_LIBNETFILTER_CTHELPER y
		define_bool	CONFIG_LIB_LIBNETFILTER_CTTIMEOUT y
	fi
fi
bool 'cups'			CONFIG_USER_CUPS
	if [ "$CONFIG_USER_CUPS" = "y" ]; then
		define_bool CONFIG_LIB_ZLIB y
		choice '  Select CUPS version'	"1.0.5	CONFIG_USER_CUPS_1_0_5
						1.4.6	CONFIG_USER_CUPS_1_4_6\
						" 1.4.6
	fi
bool 'curl'			CONFIG_USER_CURL
if [ "$CONFIG_E8B" = "y" ]; then
    bool 'Cluster manage' CONFIG_USER_CLUSTER_MANAGE
fi
bool 'cwmp-tr069'		CONFIG_USER_CWMP_TR069
if [ "$CONFIG_USER_CWMP_TR069" = "y" ]; then
	bool   '  support TR-232(IPDR-FTP)' CONFIG_USER_TR232_IPDRFTP
	if [ "$CONFIG_USER_TR232_IPDRFTP" = "y" ]; then
		choice '  Select IPDR FTP Mode' "IPDR_FTP_SERVER_MODE   CONFIG_IPDR_FTP_SERVER_MODE \
						IPDR_FTP_CLIENT_MODE    CONFIG_IPDR_FTP_CLIENT_MODE \
						" IPDR_FTP_SERVER_MODE
	fi
	bool   '  CT MiddleWare'  CONFIG_MIDDLEWARE
       	dep_bool   '  support TR-104' CONFIG_USER_TR104	$CONFIG_USER_RTK_VOIP
	bool   '  support UPnP DM Porxy' CONFIG_USER_CWMP_UPNP_DM
	bool   '  support TR-143' CONFIG_USER_TR143
	bool   '  support TR-181 issue 2' CONFIG_CWMP_TR181_SUPPORT
	bool   '  support TR-111' CONFIG_USER_TR111_STUN
	choice '  select the ssl library' "NONE		CONFIG_USER_CWMP_WITHOUT_SSL \
					   OPENSSL	CONFIG_USER_CWMP_WITH_OPENSSL \
					   MATRIXSSL	CONFIG_USER_CWMP_WITH_MATRIXSSL \
					   MATRIXSSL_NEW	CONFIG_USER_CWMP_WITH_MATRIXSSL_NEW \
					  " NONE
	if [ "$CONFIG_USER_CWMP_WITH_OPENSSL" = "y" ]; then
		define_bool	CONFIG_USER_CWMP_WITH_SSL y
		define_bool	CONFIG_LIB_LIBSSL y
	fi
	if [ "$CONFIG_USER_CWMP_WITH_MATRIXSSL" = "y" ]; then
		define_bool     CONFIG_USER_CWMP_WITH_SSL y
		define_bool	CONFIG_LIB_LIBMATRIXSSL y
	fi
	if [ "$CONFIG_USER_CWMP_WITH_MATRIXSSL_NEW" = "y" ]; then
		define_bool     CONFIG_USER_CWMP_WITH_SSL y
		define_bool	CONFIG_LIB_LIBMATRIXSSL_NEW y
	fi
# In luna trunk, file-based storage can be achieved by JFFS2 or YAFFS2
#	define_bool             CONFIG_USER_FLATFSD_XXX y
#	define_bool             CONFIG_USER_FLATFSD_AUTO y
fi

bool 'DDNS'			CONFIG_USER_DDNS
bool 'Dmalloc-5.5.2'		CONFIG_USER_DMALLOC
bool 'PHDDNS'			CONFIG_USER_PHDDNS
bool 'dhcpcd'			CONFIG_USER_DHCPCD_DHCPCD
if [ "$CONFIG_USER_DHCPCD_DHCPCD" = "y" ]; then
	bool '  dhcpcd link-local support'	CONFIG_USER_DHCPCD_LLIP
fi
bool 'dhcpcd-new (2.0/2.4)'	CONFIG_USER_DHCPCD_NEW_DHCPCD
bool 'dhcpd'			CONFIG_USER_DHCPD_DHCPD
bool 'dhcpd(ISC)' 		CONFIG_USER_DHCP_ISC_SERVER_DHCPD
bool 'dhclient(ISC)' 		CONFIG_USER_DHCP_ISC_CLIENT_DHCLIENT
bool 'dhcrelay (ISC)'		CONFIG_USER_DHCP_ISC_RELAY_DHCRELAY
bool 'dhcp(ISC)'		CONFIG_USER_DHCP_ISC
if [ "$CONFIG_USER_DHCP_ISC" = "y" ]; then
	choice ' Select the ISC DHCP Version'    "dhcp-4.1.1   CONFIG_USER_DHCPV6_ISC_DHCP411 \
						dhcp-4.4.1   CONFIG_USER_DHCPV6_ISC_DHCP441 \
						" dhcp-4.1.1
	bool '    Automatically select the latest PD for LAN Server'	CONFIG_USER_LAN_IPV6_SERVER_USE_LATEST_PD
	bool '    support ISC DHCP using system time feature'	CONFIG_USER_RTK_DHCP_ISC_USE_SYSTEM_TIME
	bool '    support DHCPv6 Reconfig feature'	CONFIG_USER_DHCPV6_RECONF_MSG
	bool '    support DHCPv6 EUI-64 pool type feature'      CONFIG_USER_DHCPV6_EUI64_POOL_TYPE
    bool '    support DHCPv6 static lease file'      CONFIG_USER_DHCPV6_STATIC_LEASE
#    bool '    support DHCPv6 Server PD'	CONFIG_USER_DHCPV6_PREFIX_DELEGATION
    bool '    support DHCPv6 Server PD' CONFIG_USER_RTK_DHCPV6_SERVER_PD_SUPPORT
	if [ "$CONFIG_USER_DHCPV6_RECONF_MSG" = "y" ]; then
		define_bool	CONFIG_LIB_LIBMD5_FORCE y
	fi
fi
bool 'diald'			CONFIG_USER_DIALD_DIALD
bool 'discard'			CONFIG_USER_DISCARD_DISCARD
bool 'dnsmasq'			CONFIG_USER_DNSMASQ_DNSMASQ
if [ "$CONFIG_USER_DNSMASQ_DNSMASQ" = "y" ]; then
	choice ' Select the DNSMASQ Version' 	"dnsmasq-2.45	CONFIG_USER_DNSMASQ_DNSMASQ245 \
						dnsmasq-2.78	CONFIG_USER_DNSMASQ_DNSMASQ278 \
						dnsmasq-2.80	CONFIG_USER_DNSMASQ_DNSMASQ280 \
						" dnsmasq-2.80
fi

bool 'APP dns request not go through dnsmasq'         	CONFIG_USER_APP_DNS_NOT_GO_THROUGH_DNSMASQ
bool 'dns relay/proxy'          CONFIG_USER_DNS_RELAY_PROXY
bool 'dropbear (ssh server)'	CONFIG_USER_SSH_DROPBEAR
if [ "$CONFIG_USER_SSH_DROPBEAR" = "y" ]; then
	choice ' Select the dropbear Version' 	"dropbear-0.48.1	CONFIG_USER_SSH_DROPBEAR_0_48_1 \
						dropbear-2019.78	CONFIG_USER_SSH_DROPBEAR_2019_78 \
						" dropbear-2019.78
fi

if [ "$CONFIG_IPV6_MROUTE" = "y" ]; then
	bool 'Multicast Listener Discovery(MLD) Daemon'	CONFIG_USER_MLDPROXY
	if [ "$CONFIG_USER_MLDPROXY" = "y" -a "$CONFIG_RTK_L34_FLEETCONNTRACK_ENABLE" = "y" ]; then
		bool '  mld handle the FC flow'	CONFIG_USER_MLDPROXY_HANDLE_MCFLOW
	fi
fi
bool 'elink'                    CONFIG_ELINK_SUPPORT
if [ "$CONFIG_ELINK_SUPPORT" = "y" ]; then
        bool '  elink_sdk'     CONFIG_ELINKSDK_SUPPORT
	bool '	elinksdk in romfs' CONFIG_ELINKSDK_IN_ROMFS
fi
bool 'ethattach'		CONFIG_USER_ETHATTACH_ETHATTACH

# August for ethtool
bool 'ethtool'			CONFIG_ETHTOOL

bool 'ez-ipupdate'		CONFIG_USER_EZIPUPDATE_EZIPUPDATE
bool 'fon'			CONFIG_USER_FON
bool 'ftp'			CONFIG_USER_FTP_FTP_FTP
bool 'ftpd'			CONFIG_USER_FTPD_FTPD

bool 'freeswan-apps'	CONFIG_USER_FREESWAN
if [ "$CONFIG_USER_FREESWAN" = "y" ]; then

	bool '  pluto'		CONFIG_USER_FREESWAN_PLUTO_PLUTO
	if [ "$CONFIG_USER_FREESWAN_PLUTO_PLUTO" = "y" ]; then
		define_bool 	CONFIG_LIB_LIBGMP y
		define_bool 	CONFIG_LIB_LIBDES y
	fi
	bool '  whack'		CONFIG_USER_FREESWAN_PLUTO_WHACK
	bool '  ranbits'	CONFIG_USER_FREESWAN_UTILS_RANBITS
	bool '  rsasigkey'	CONFIG_USER_FREESWAN_UTILS_RSASIGKEY
	if [ "$CONFIG_USER_FREESWAN_UTILS_RSASIGKEY" = "y" ]; then
		define_bool 	CONFIG_LIB_LIBGMP y
	fi
	bool '  eroute'		CONFIG_USER_FREESWAN_KLIPS_EROUTE
	bool '  klipsdebug'	CONFIG_USER_FREESWAN_KLIPS_KLIPSDEBUG
	bool '  spi'		CONFIG_USER_FREESWAN_KLIPS_SPI
	bool '  spigrp'		CONFIG_USER_FREESWAN_KLIPS_SPIGRP
	bool '  tncfg'		CONFIG_USER_FREESWAN_KLIPS_TNCFG
	bool '  fswcert'	CONFIG_USER_FSWCERT_FSWCERT
 	if [ "$CONFIG_USER_FSWCERT_FSWCERT" = "y" ]; then
 		define_bool	CONFIG_LIB_LIBSSL y
 	fi
fi

bool 'iw-5.4'			CONFIG_USER_IW_5_4
bool 'regdb'            	CONFIG_USER_REGDB
bool 'hostapd'			CONFIG_USER_HAPD
bool 'wpa_supplicant'		CONFIG_USER_WPAS
if [ "$CONFIG_USER_HAPD" = "y" -o "$CONFIG_USER_WPAS" = "y" ]; then
	define_bool     CONFIG_LIB_LIBNL y
fi
bool 'httpd'			CONFIG_USER_HTTPD_HTTPD
bool 'idb'			CONFIG_USER_IDB_IDB
bool 'ifattach'			CONFIG_USER_IFATTACH_IFATTACH
bool 'ifconfig'			CONFIG_USER_ROUTE_IFCONFIG

bool 'ifmond2'			CONFIG_USER_IFMOND2_IFMOND
bool 'igmpproxy'		CONFIG_USER_IGMPPROXY
if [ "$CONFIG_USER_IGMPPROXY" = "y" ]; then
	bool '  CFG with file'	CONFIG_USER_IGMPPROXY_SUPPORT_CFG_FILE
fi
bool 'igmptr247'		CONFIG_USER_IGMPTR247

bool 'inetd'			CONFIG_USER_INETD_INETD
bool 'ipchains'			CONFIG_USER_IPCHAINS_IPCHAINS
bool 'iperf'			CONFIG_USER_IPERF
bool 'iperf-2.0.9'		CONFIG_USER_IPERF_2_0_9
bool 'iperf-3.1.4'		CONFIG_USER_IPERF_3_1_4
bool 'ipfwadm'			CONFIG_USER_IPFWADM_IPFWADM
bool 'ipmasqadm'		CONFIG_USER_IPMASQADM_IPMASQADM
bool 'ipportfw'			CONFIG_USER_IPPORTFW_IPPORTFW
bool 'ipredir'			CONFIG_USER_IPREDIR_IPREDIR

bool 'iproute2'			CONFIG_USER_IPROUTE2
bool 'iproute2-3.4.0'   CONFIG_USER_IPROUTE2_3_4_0
bool 'iproute2-3.18.0'  CONFIG_USER_IPROUTE2_3_18_0
bool 'iproute2-4.4.0'   CONFIG_USER_IPROUTE2_4_4_0
if [ "$CONFIG_USER_IPROUTE2" = "y" -o "$CONFIG_USER_IPROUTE2_3_4_0" = "y" -o "$CONFIG_USER_IPROUTE2_3_18_0" -o "$CONFIG_USER_IPROUTE2_4_4_0" = "y" ]; then
	bool '  tc'			CONFIG_USER_IPROUTE2_TC_TC
	bool '  ifcfg (complex scripting reqd.)' CONFIG_USER_IPROUTE2_IP_IFCFG
	bool '  ip'			CONFIG_USER_IPROUTE2_IP_IP
	bool '  routef'		CONFIG_USER_IPROUTE2_IP_ROUTEF
	bool '  routel'		CONFIG_USER_IPROUTE2_IP_ROUTEL
	bool '  rtacct'		CONFIG_USER_IPROUTE2_IP_RTACCT
	bool '  rtmon'		CONFIG_USER_IPROUTE2_IP_RTMON
	bool '  rtpr'		CONFIG_USER_IPROUTE2_IP_RTPR
fi

bool 'iptables'			CONFIG_USER_IPTABLES_IPTABLES
bool 'iptables-1.4.18'  CONFIG_USER_IPTABLES_IPTABLES_1_4_18
if [ "$CONFIG_USER_IPTABLES_IPTABLES_1_4_18" = "y" ]; then
	define_bool	CONFIG_LIB_LIBNFNETLINK y
fi
bool 'iputils'			CONFIG_USER_IPUTILS
bool 'ipset'			CONFIG_USER_IPSET
if [ "$CONFIG_USER_IPSET" = "y" ]; then
	define_bool     CONFIG_LIB_LIBMNL y
	choice '  Select ipset version'  "7.5   CONFIG_USER_IPSET_7_5 \
									 " 7.5
fi
bool 'ebtables'			CONFIG_BRIDGE_NF_EBTABLES
bool 'klaxon'			CONFIG_USER_KLAXON_KLAXON
if [ "$CONFIG_USER_KLAXON_KLAXON" = "y" ]; then
	bool '  use RFC931'	CONFIG_USER_KLAXON_RFC931
	bool '  detect chargen'	CONFIG_USER_KLAXON_CHARGEN
	bool '  detect discard'	CONFIG_USER_KLAXON_DISCARD
	bool '  detect echo'	CONFIG_USER_KLAXON_ECHO
	bool '  detect ftp'	CONFIG_USER_KLAXON_FTP
	bool '  detect http'	CONFIG_USER_KLAXON_HTTP
	bool '  detect smtp'	CONFIG_USER_KLAXON_SMTP
	bool '  detect snmp'	CONFIG_USER_KLAXON_SNMP
	bool '  detect ssh'	CONFIG_USER_KLAXON_SSH
	bool '  detect telnet'	CONFIG_USER_KLAXON_TELNET
	bool '  detect tftp'	CONFIG_USER_KLAXON_TFTP
fi
bool 'Enable VxLAN' CONFIG_USER_VXLAN
if [ "$CONFIG_PPP" = "y" ]; then
bool 'l2tp'			CONFIG_USER_L2TPD_L2TPD
if [ "$CONFIG_USER_L2TPD_L2TPD" = "y" ]; then
	bool '  l2tpd'	CONFIG_USER_L2TPD_LNS
fi
bool 'xl2tpd'			CONFIG_USER_XL2TPD
fi

bool 'loattach'			CONFIG_USER_LOATTACH_LOATTACH

bool 'lanvlan'         CONFIG_USER_LAN_VLAN_TRANSLATE

bool 'mail' 			CONFIG_USER_SMTP_SMTPCLIENT
bool 'mail_ip'			CONFIG_USER_MAIL_MAIL_IP
bool 'MAP-E'			CONFIG_USER_MAP_E
bool 'MAP-T(need open CONFIG_SH_MATH_SUPPORT_64 of shell)' 			CONFIG_USER_MAP_T
bool 'minidlna'                 CONFIG_USER_MINIDLNA
bool 'expat-2.1.0'			CONFIG_USER_EXPAT
# Mac clone
bool 'macclone'			CONFIG_USER_MAC_CLONE
# Added by Mason Yu for p2r_test
bool 'mfcv6d'			CONFIG_USER_MFCV6D

bool 'mini_httpd'		CONFIG_USER_MINI_HTTPD_MINI_HTTPD
if [ "$CONFIG_USER_MINI_HTTPD_MINI_HTTPD" = "y" ]; then
	bool 'mini_httpd uses SSL'      CONFIG_USER_MINI_HTTPD_WITH_SSL
	if [ "$CONFIG_USER_MINI_HTTPD_WITH_SSL" = "y" ]; then
		define_bool	CONFIG_LIB_LIBSSL y
	fi
fi

bool 'monitord'			CONFIG_USER_MONITORD
bool 'mqtt'             CONFIG_USER_MQTT_SUPPORT
bool 'msntp'			CONFIG_USER_MSNTP_MSNTP
bool 'mstpd'                    CONFIG_USER_MSTPD
bool 'netstat'			CONFIG_USER_ROUTE_NETSTAT
bool 'netstat-nat'		CONFIG_USER_NETSTAT_NAT_NETSTAT_NAT

bool 'mii-tool'			CONFIG_USER_ROUTE_MIITOOL
bool 'netlogger'                CONFIG_USER_NETLOGGER_SUPPORT
bool 'openssl'			CONFIG_USER_OPENSSL_APPS
if [ "$CONFIG_USER_OPENSSL_APPS" = "y" ]; then
	define_bool CONFIG_LIB_LIBSSL y
fi
bool 'p0f'			CONFIG_USER_P0F
if [ "$CONFIG_USER_P0F" = "y" ]; then
	define_bool             CONFIG_LIB_LIBPCAP y
fi
bool 'parental-control'			CONFIG_USER_PARENTAL_CONTROL
bool 'ping'			CONFIG_USER_PING_PING
bool 'pktdelay'			CONFIG_USER_PKTDELAY_PKTDELAY
if [ "$CONFIG_USER_PKTDELAY_PKTDELAY" = "y" ]; then
	define_bool CONFIG_LIB_LIBSNAPGEARPP y
fi
bool 'plugdaemon'		CONFIG_USER_PLUG_PLUG
bool 'portmap'			CONFIG_USER_PORTMAP_PORTMAP

if [ "$CONFIG_PPP" = "y" ]; then
bool 'ppp over modem'		CONFIG_USER_PPPOMODEM
bool 'pppoe-proxy'              CONFIG_USER_PPPOE_PROXY
choice 'Point-to-Point Protocol Daemon'  "spppd   CONFIG_USER_SPPPD \
					  pppd    CONFIG_USER_PPPD" spppd
if [ "$CONFIG_USER_SPPPD" = "y" ]; then
	bool '  enable ppp mixed mode'	CONFIG_USER_PPP_MIXED
fi
if [ "$CONFIG_USER_PPPD" = "y" -o "$CONFIG_USER_PPP_MIXED" = "y" ]; then
        choice '  Select PPPD version'  "2.4.7    CONFIG_USER_PPPD_2_4_7" 2.4.7
	choice '  Select Default PPPD Config Path'  "/etc/ppp    CONFIG_USER_PPPD_DEFAULT_PATH \
				                     /etc/pppd            CONFIG_USER_PPPD_ETC_PPPD_PATH \
						    " /etc/ppp
	if [ "$CONFIG_USER_PPPD_WITH_MPPE" = "y" ]; then
		define_bool	CONFIG_LIB_LIBDES y
	fi
	bool '  enable PPPOE'	CONFIG_USER_PPPD_WITH_PPPOE
	bool '  enable PPPOA'	CONFIG_USER_PPPD_WITH_PPPOA
fi

bool 'pptpctrl'			CONFIG_USER_PPTPD_PPTPCTRL
bool 'pptp'			CONFIG_USER_PPTP_CLIENT_PPTP
if [ "$CONFIG_USER_PPTP_CLIENT_PPTP" = "y" ]; then
	bool '  pptpd'	CONFIG_USER_PPTPD_PPTPD
fi
bool 'pptp_callmgr'		CONFIG_USER_PPTP_CLIENT_PPTP_CALLMGR
bool 'pptp client'		CONFIG_USER_PPTP_CLIENT
fi

# Mason Yu. for ipv6
bool 'radvd'		CONFIG_USER_RADVD
if [ "$CONFIG_USER_RADVD" = "y" ]; then
	define_bool     CONFIG_LIB_FLEX y
	choice '  Select radvd version'  "1.8   CONFIG_USER_RADVD_1_8\
					2.17   CONFIG_USER_RADVD_2_17" 1.8
fi

bool 'rarp client'		CONFIG_USER_RARP
bool 'ndppd'           CONFIG_USER_NDPPD

bool 'remote management'	CONFIG_USER_REMOTE_MANAGEMENT
bool 'rdate'			CONFIG_USER_RDATE_RDATE

bool 'route'			CONFIG_USER_ROUTE_ROUTE
bool 'routed'			CONFIG_USER_ROUTED_ROUTED
bool 'rp-pppoe'			CONFIG_USER_RP_PPPOE_PPPOE
bool 'rtl_link'                 CONFIG_RTL_LINK_SUPPORT
bool 'sethdlc'			CONFIG_USER_SETHDLC_SETHDLC
bool 'shadowsocks-libev'        CONFIG_USER_SHADOWSOCKS_LIBEV

bool 'sc api'              CONFIG_USER_SC_API
if [ "$CONFIG_USER_SC_API" = "y" ]; then
        bool 'enable sc api debug'       CONFIG_USER_SC_API_DEBUG_ON
        bool 'enable sc api test case'   CONFIG_USER_SC_API_TESTER
        define_bool CONFIG_USER_ADAPTER_API_ISP y
	define_bool CONFIG_USER_WEB_404_REDIR y
fi

bool 'slattach'			CONFIG_USER_SLATTACH_SLATTACH
bool 'snmpd'			CONFIG_USER_SNMPD_SNMPD
bool 'snmpdv2c'			CONFIG_USER_SNMPD_SNMPD_V2C
bool 'snmpdv2cTrap'		CONFIG_USER_SNMPD_SNMPD_V2CTRAP
bool 'snmpdv3'			CONFIG_USER_SNMPD_SNMPD_V3
bool 'sysklogd-1.5.1'	CONFIG_USER_SYSKLOD
if [ "$CONFIG_USER_MGMT_MGMT" = "y" ]; then
	define_bool CONFIG_USER_SGSNMPD_AGENT y

fi


bool 'strongswan'			CONFIG_USER_STRONGSWAN
if [ "$CONFIG_USER_STRONGSWAN" = "y"  ]; then
#	choice 'Version'	"v5.8.4	CONFIG_USER_STRONGSWAN_V5_8_4 " v5.8.4
	define_bool     CONFIG_USER_STRONGSWAN_V5_8_4 y
	define_bool     CONFIG_LIB_LIBGMP y
fi
bool 'stunnel'			CONFIG_USER_STUNNEL_STUNNEL
bool 'squid'			CONFIG_USER_SQUID_SQUID

bool 'ssh'			CONFIG_USER_SSH_SSH
bool 'sshd'			CONFIG_USER_SSH_SSHD
bool 'ssh-keygen'		CONFIG_USER_SSH_SSHKEYGEN
if [ "$CONFIG_USER_SSH_SSHD" = "y" ]; then
	define_bool CONFIG_LIB_LIBSSL y
fi
if [ "$CONFIG_USER_SSH_SSH" = "y" ]; then
	define_bool CONFIG_LIB_LIBSSL y
fi
if [ "CONFIG_USER_SSH_SSHKEYGEN" = "y" ]; then
	define_bool CONFIG_LIB_LIBSSL y
fi

bool 'stp'			CONFIG_USER_STP_STP
bool 'stun_client'              CONFIG_USER_STUN_CLIENT
bool 'tcpd'			CONFIG_USER_TCPWRAP_TCPD
if [ "$CONFIG_USER_TCPWRAP_TCPD" = "y" ]; then
	bool '  miscd'		CONFIG_USER_TCPWRAP_MISCD
	bool '  safe finger'	CONFIG_USER_TCPWRAP_FINGER
	bool '  tcpd match'	CONFIG_USER_TCPWRAP_TCPDMATCH
	bool '  try from'	CONFIG_UEER_TCPWRAP_TRYFROM
	bool '  tcpdchk'	CONFIG_USER_TCPWRAP_TCPDCHK
fi
bool 'tcpblast'			CONFIG_USER_TCPBLAST_TCPBLAST
bool 'tcpdump (web interface)'	CONFIG_USER_TCPDUMP_WEB
bool 'tcpdump'			CONFIG_USER_TCPDUMP_TCPDUMP
if [ "$CONFIG_USER_TCPDUMP_TCPDUMP" = "y" ]; then
	define_bool 		CONFIG_LIB_LIBPCAP y
fi
bool 'telnetd'			CONFIG_USER_TELNETD_TELNETD
bool 'telnet'			CONFIG_USER_TELNET_TELNET
if [ "$CONFIG_USER_TELNET_TELNET" = "y" ]; then
	define_bool 		CONFIG_LIB_LIBG y
fi

bool 'tftp'			CONFIG_USER_TFTP_TFTP
bool 'tftpd'			CONFIG_USER_TFTPD_TFTPD
bool 'thttpd'			CONFIG_USER_THTTPD_THTTPD

bool 'traceroute'		CONFIG_USER_TRACEROUTE_TRACEROUTE
bool 'udhcp-0.9.9-pre2'		CONFIG_USER_UDHCP099PRE2
if [ "$CONFIG_USER_UDHCP099PRE2" = "y" ]; then
#	if [ "$CONFIG_RTL_MESH_SUPPORT" = "y" ]; then
		bool '  Enable DHCP Client mode'  CONFIG_USER_DHCPCLIENT_MODE
#	fi
	bool '  Enable DHCP Client static route option'  CONFIG_USER_DHCP_OPT_33_249
	bool '  Enable DHCP Client IP conflict detection'  CONFIG_USER_DHCPCLIENT_CHECK_IP_CONFLICT
fi

bool 'ucd snmpd'		CONFIG_USER_UCDSNMP_SNMPD
bool 'upnpd'			CONFIG_USER_UPNPD
bool 'miniupnpd'		CONFIG_USER_MINIUPNPD
if [ "$CONFIG_USER_MINIUPNPD" = "y" ]; then
	bool '  use shared library'	CONFIG_USE_SHARED_LIB
  bool '  TR-064' CONFIG_TR_064
fi
if [ "$CONFIG_USE_SHARED_LIB" = "y" ]; then
  define_bool   CONFIG_USER_MINI_UPNPD y
fi
bool 'valgrind'                 CONFIG_USER_VALGRIND
if [ "$CONFIG_USER_VALGRIND" = "y" ]; then
        choice '  Select Valgrind version'  " \
			3.16.1  CONFIG_USER_VALGRIND_3_16_1 \
        " 3.16.1
fi
bool 'vpnled'			CONFIG_USER_VPNLED_VPNLED
bool 'vsntp'			CONFIG_USER_VSNTP

bool 'wapi-utils'		CONFIG_USER_WAPI

if [ "$CONFIG_USER_WAPI" = "y" ]; then
	define_bool	CONFIG_USER_OPENSSL_WAPI y
	define_bool	CONFIG_USER_BUSYBOX_KILLALL y
	define_bool	CONFIG_USER_BUSYBOX_MV y
	define_bool	CONFIG_USER_BUSYBOX_LN y
fi

bool 'wget'			CONFIG_USER_WGET
bool 'wget_manage'			CONFIG_USER_WGET_MANAGE
bool 'wlan_server'                  	CONFIG_USER_WLAN_SERVER
bool 'WT-146 Subscriber Sessions'	CONFIG_USER_WT_146

bool 'zebra'			CONFIG_USER_ZEBRA_ZEBRA_ZEBRA
if [ "$CONFIG_USER_ZEBRA_ZEBRA_ZEBRA" = "y" ]; then
	bool '  zebra-bgpd'	CONFIG_USER_ZEBRA_BGPD_BGPD
	bool '  zebra-ospfd'	CONFIG_USER_ZEBRA_OSPFD_OSPFD
	bool '  zebra-ripd'	CONFIG_USER_ZEBRA_RIPD_RIPD
fi

bool 'quagga'                   CONFIG_USER_QUAGGA
if [ "$CONFIG_USER_QUAGGA" = "y" ]; then
	bool '  quagga-ripng'   CONFIG_USER_QUAGGA_RIPNGD
fi

comment 'new feature'
if [ "$CONFIG_E8B" = "y" ]; then
    bool 'RTP QoS support' QOS_SUPPORT_RTP
fi
    bool 'IMQ QoS support' QOS_SETUP_IMQ
    bool 'IFB QoS support' QOS_SETUP_IFB


comment 'Net-tools'
bool 'arp'			CONFIG_USER_NET_TOOLS_ARP
bool 'hostname'			CONFIG_USER_NET_TOOLS_HOSTNAME
bool 'ifconfig'			CONFIG_USER_NET_TOOLS_IFCONFIG
bool 'nameif'			CONFIG_USER_NET_TOOLS_NAMEIF
bool 'netstat'			CONFIG_USER_NET_TOOLS_NETSTAT
bool 'plipconfig'		CONFIG_USER_NET_TOOLS_PLIPCONFIG
bool 'rarp'			CONFIG_USER_NET_TOOLS_RARP
bool 'route'			CONFIG_USER_NET_TOOLS_ROUTE
bool 'slattach'			CONFIG_USER_NET_TOOLS_SLATTACH
bool 'mii-tool'			CONFIG_USER_NET_TOOLS_MII_TOOL

comment 'Wireless-tools'
bool 'wireless_tools support'	CONFIG_USER_WIRELESS_TOOLS
if [ "$CONFIG_USER_WIRELESS_TOOLS" = "y" ]; then
	bool '    Use wireless_tools.29' CONFIG_USER_WIRELESS_TOOLS_29
	bool 'iwconfig'	CONFIG_USER_WIRELESS_TOOLS_IWCONFIG
	bool 'iwgetid'	CONFIG_USER_WIRELESS_TOOLS_IWGETID
	bool 'iwlist'	CONFIG_USER_WIRELESS_TOOLS_IWLIST
	bool 'iwpriv'	CONFIG_USER_WIRELESS_TOOLS_IWPRIV
	bool 'iwspy'	CONFIG_USER_WIRELESS_TOOLS_IWSPY
	bool 'MBSSID'		CONFIG_USER_WIRELESS_MBSSID
	bool 'RTL8185 auth'	CONFIG_USER_WIRELESS_TOOLS_RTL8185_AUTH
	bool 'RTL8185 iapp'	CONFIG_USER_WIRELESS_TOOLS_RTL8185_IAPP	
	if [ "$CONFIG_WIFI_SIMPLE_CONFIG" = "y" ]; then
        	define_bool CONFIG_USER_BUSYBOX_CP y
        	define_bool CONFIG_USER_MINI_UPNPD y
		bool 'wps query' CONFIG_USER_WLAN_WPS_QUERY
		bool 'wps vap'	CONFIG_USER_WLAN_WPS_VAP
		bool 'WIFI LED share with WPS' CONFIG_USER_WIFI_LED_SHARE_WITH_WPS
	else
		if [ "$CONFIG_USER_HAPD" = "y" ]; then
			bool 'wps vap'  CONFIG_USER_WLAN_WPS_VAP
		fi
	fi
	bool 'WDS'		CONFIG_USER_WIRELESS_WDS
	bool 'WMM QoS' CONFIG_USER_WLAN_QOS
	bool 'MP Mode'	CONFIG_USER_WIRELESS_MP_MODE
	bool 'qcsapi' CONFIG_USER_WLAN_QCSAPI
	bool 'wlan_schedule' CONFIG_WLAN_SCHEDULE_SUPPORT
	bool 'wifi timer' CONFIG_WIFI_TIMER_SCHEDULE
	bool 'wifi test scripts' CONFIG_WIFI_TEST_SCRIPTS
	bool 'thermal_control' CONFIG_USER_THERMAL_CONTROL
fi
choice 'Port Triggering Method'	"None	CONFIG_USER_NO_PORT_TRIGGERING \
		                        RTK_Porttriggering_Static	CONFIG_USER_PORT_TRIGGER_STATIC \
		                        RTK_Porttriggering_Dynamic CONFIG_USER_PORT_TRIGGER_DYNAMIC" None

comment 'Bluetooth-tools'
bool 'BLUEZ SUPPORT'    CONFIG_USER_BLUEZ
if [ "$CONFIG_USER_BLUEZ" = "y" ]; then
	define_bool CONFIG_LIB_ZLIB y
	define_bool CONFIG_LIB_LIBFFI y
choice '  BLUEZ VERSION' "bluez-5.50     CONFIG_USER_BLUEZ_5_50 \
                        " bluez-5.50
fi

bool 'rtk hciattach' CONFIG_USER_RTK_HCIATTACH
bool 'rtk bluetooth firmware' CONFIG_USER_RTK_BLUETOOTH_FIRMWARE
if [ "$CONFIG_USER_RTK_BLUETOOTH_FIRMWARE" = "y" ]; then
choice 'Bluetooth Chip Version' "8761btv   CONFIG_RTK_BLUETOOTH_HW_RTL8761B_TV \
                                 8761bt    CONFIG_RTK_BLUETOOTH_HW_RTL8761B_T \
                                 8761atv   CONFIG_RTK_BLUETOOTH_HW_RTL8761A_TV \
                                 8761at    CONFIG_RTK_BLUETOOTH_HW_RTL8761A_T \
                                 8822b     CONFIG_RTK_BLUETOOTH_HW_RTL8822_S "8761atv
choice 'Save MP parameter in flash or efuse' "efuse CONFIG_RTK_BLUETOOTH_CONFIGURATION_IN_EFUSE \
                                              flash CONFIG_RTK_BLUETOOTH_CONFIGURATION_IN_FLASH "efuse
fi
bool 'rtk bluetooth mp tool' CONFIG_USER_RTK_BLUETOOTH_MP_TOOL
endmenu

#############################################################################

mainmenu_option next_comment
comment 'Miscellaneous Applications'

bool 'a60'			CONFIG_USER_LANG_A60
if [ "$CONFIG_USER_LANG_A60" = "y" ]; then
	bool '  examples'	CONFIG_USER_LANG_A60_EGS
	bool '  tests'		CONFIG_USER_LAND_A60_TEST
fi

bool 'cal'			CONFIG_USER_CAL_CAL
bool 'chat'			CONFIG_USER_CHAT_CHAT
bool 'cksum'			CONFIG_USER_CKSUM_CKSUM
bool 'clock'			CONFIG_USER_CLOCK_CLOCK
bool 'cpu'			CONFIG_USER_CPU_CPU
bool 'cpulimit'			CONFIG_USER_CPU_LIMIT
bool 'date'			CONFIG_USER_CAL_DATE

if [ "$CONFIG_USER_DESTEST_DESTEST" = "y" ]; then
	define_bool 	CONFIG_LIB_LIBDES y
fi

if [ "$CONFIG_USER_DESTEST_DESPERF" = "y" ]; then
	define_bool 	CONFIG_LIB_LIBDES y
	define_bool 	CONFIG_LIB_LIBAES y
fi
bool 'dhrystone'   	  	CONFIG_USER_DHRYSTONE_DHRYSTONE
bool 'dhrystone SMP'   	  	CONFIG_USER_DHRYSTONE_DHRYSTONE_SMP


if [ "$CONFIG_USER_FACTORY_FACTTEST" = "y" ]; then
	define_bool 	CONFIG_LIB_LIBDES y
fi
bool 'frob-led'			CONFIG_USER_FROB_LED_FROB_LED
bool 'gator-daemon'		CONFIG_GATOR_DAEMON
#bool 'gdb'			CONFIG_USER_GDB_GDB
bool 'gdbserver'		CONFIG_USER_GDB_GDBSERVER
#bool 'gdbrelay'			CONFIG_USER_GDB_GDBRELAY
bool 'hd'			CONFIG_USER_HD_HD
bool 'htop'			CONFIG_USER_HTOP
bool 'lcd'			CONFIG_USER_LCD_LCD
bool 'ledcon'			CONFIG_USER_LEDCON_LEDCON
bool 'lilo'			CONFIG_USER_LILO_LILO
bool 'lissa'			CONFIG_USER_LISSA_LISSA
bool 'LMbench'			CONFIG_USER_LMBENCH
bool 'mathstests'		CONFIG_USER_MATH_TEST
bool 'mawk'			CONFIG_USER_MAWK_AWK
bool 'memtester'		CONFIG_USER_MEMTESTER
bool 'null'			CONFIG_USER_NULL_NULL
bool 'palmbot'			CONFIG_USER_PALMBOT_PALMBOT
bool 'pcmcia-cs (Card Services)' CONFIG_USER_PCMCIA_CS
bool 'PC/SC Lite (Smart Card)'	CONFIG_USER_PCSCLITE
bool 'perl'			CONFIG_USER_PERL_PERL
bool 'python'			CONFIG_USER_PYTHON_PYTHON
bool 'readprofile'		CONFIG_USER_READPROFILE_READPROFILE
bool 'rootloader'		CONFIG_USER_ROOTLOADER_ROOTLOADER
bool 'setserial'		CONFIG_USER_SETSERIAL_SETSERIAL
bool 'siggen'			CONFIG_USER_TRIPWIRE_SIGGEN
bool 'strace'			CONFIG_USER_STRACE_STRACE
bool 'stty'			CONFIG_USER_STTY_STTY
bool 'tcsh'			CONFIG_USER_TCSH_TCSH
bool 'pThreads threaddemos'	CONFIG_USER_THREADDEMOS_THREADDEMOS
bool 'tip'			CONFIG_USER_TIP_TIP
bool 'tripwire'			CONFIG_USER_TRIPWIRE_TRIPWIRE
bool 'usbinout'                 CONFIG_USER_USBINOUT
bool 'usbmount'			CONFIG_USER_USBMOUNT_USBMOUNT
if [ "$CONFIG_USER_SAMBA" = "y" \
	-o "$CONFIG_USER_MINIDLNA" = "y" \
	-o "$CONFIG_BOA_WEB_E8B_CH" = "y" \
	]; then
	define_bool		CONFIG_USER_USBMOUNT_USBMOUNT y
fi
comment 'LIRC'
bool 'Enable LIRC tools'	CONFIG_USER_LIRC
dep_bool '  lircd'		CONFIG_USER_LIRC_LIRCD    $CONFIG_USER_LIRC
dep_bool '  irrecord'		CONFIG_USER_LIRC_IRRECORD $CONFIG_USER_LIRC
dep_bool '  lircmd'		CONFIG_USER_LIRC_LIRCMD   $CONFIG_USER_LIRC
dep_bool '  irexec'		CONFIG_USER_LIRC_IREXEC   $CONFIG_USER_LIRC
dep_bool '  irw'		CONFIG_USER_LIRC_IRW      $CONFIG_USER_LIRC
dep_bool '  mode2'		CONFIG_USER_LIRC_MODE2    $CONFIG_USER_LIRC

comment 'Editors'
bool 'vi (leevee)'		CONFIG_USER_LEVEE_VI
bool 'vi (elvis-tiny)'		CONFIG_USER_ELVISTINY_VI

comment 'Audio tools'
bool 'mp3play'			CONFIG_USER_MP3PLAY_MP3PLAY
bool 'ogg123'			CONFIG_USER_OGGPLAY_OGG123
bool 'ivorbisfile_example'	CONFIG_USER_OGGPLAY_EXAMPLE

bool 'musicbox'			CONFIG_USER_MUSICBOX_MUSICBOX
bool 'play'			CONFIG_USER_PLAY_PLAY
bool 'tone'			CONFIG_USER_PLAY_TONE
bool 'vplay'			CONFIG_USER_VPLAY_VPLAY
bool 'vrec'			CONFIG_USER_VPLAY_VREC
bool 'mixer'			CONFIG_USER_VPLAY_MIXER
bool 'playrt'			CONFIG_USER_PLAYRT_PLAYRT

comment 'Video tools'
bool 'vidcat'			CONFIG_USER_W3CAM_VIDCAT
bool 'w3camd'			CONFIG_USER_W3CAM_W3CAMD

if [ "$CONFIG_USER_W3CAM_VIDCAT" = "y" ]; then
	define_bool CONFIG_LIB_LIBPNG y
	define_bool CONFIG_LIB_LIBJPEG y
fi

comment 'Fileutils tools'
bool 'cat'			CONFIG_USER_FILEUTILS_CAT
bool 'chgrp'			CONFIG_USER_FILEUTILS_CHGRP
bool 'chmod'			CONFIG_USER_FILEUTILS_CHMOD
bool 'chown'			CONFIG_USER_FILEUTILS_CHOWN
bool 'cmp'			CONFIG_USER_FILEUTILS_CMP
bool 'cp'			CONFIG_USER_FILEUTILS_CP
bool 'dd'			CONFIG_USER_FILEUTILS_DD
bool 'grep'			CONFIG_USER_FILEUTILS_GREP
bool 'l'			CONFIG_USER_FILEUTILS_L
bool 'ln'			CONFIG_USER_FILEUTILS_LN
bool 'ls'			CONFIG_USER_FILEUTILS_LS
bool 'mkdir'			CONFIG_USER_FILEUTILS_MKDIR
bool 'mkfifo'			CONFIG_USER_FILEUTILS_MKFIFO
bool 'mknod'			CONFIG_USER_FILEUTILS_MKNOD
bool 'more'			CONFIG_USER_FILEUTILS_MORE
bool 'mv'			CONFIG_USER_FILEUTILS_MV
bool 'rm'			CONFIG_USER_FILEUTILS_RM
bool 'rmdir'			CONFIG_USER_FILEUTILS_RMDIR
bool 'sync'			CONFIG_USER_FILEUTILS_SYNC
bool 'touch'			CONFIG_USER_FILEUTILS_TOUCH

comment 'Shutils tools'
bool 'basename'			CONFIG_USER_SHUTILS_BASENAME
bool 'date'			CONFIG_USER_SHUTILS_DATE
bool 'dirname'			CONFIG_USER_SHUTILS_DIRNAME
bool 'echo'			CONFIG_USER_SHUTILS_ECHO
bool 'false'			CONFIG_USER_SHUTILS_FALSE
bool 'logname'			CONFIG_USER_SHUTILS_LOGNAME
bool 'printenv'			CONFIG_USER_SHUTILS_PRINTENV
bool 'pwd'			CONFIG_USER_SHUTILS_PWD
bool 'true'			CONFIG_USER_SHUTILS_TRUE
bool 'uname'			CONFIG_USER_SHUTILS_UNAME
bool 'which'			CONFIG_USER_SHUTILS_WHICH
bool 'whoami'			CONFIG_USER_SHUTILS_WHOAMI
bool 'yes'			CONFIG_USER_SHUTILS_YES

comment 'Sysutils tools'
bool 'reboot'			CONFIG_USER_SYSUTILS_REBOOT
bool 'shutdown'			CONFIG_USER_SYSUTILS_SHUTDOWN
bool 'df'			CONFIG_USER_SYSUTILS_DF
bool 'free'			CONFIG_USER_SYSUTILS_FREE
bool 'hostname'			CONFIG_USER_SYSUTILS_HOSTNAME
bool 'kill'			CONFIG_USER_SYSUTILS_KILL
bool 'ps'			CONFIG_USER_SYSUTILS_PS

comment 'Procps tools'
bool 'free'			CONFIG_USER_PROCPS_FREE
bool 'kill'			CONFIG_USER_PROCPS_KILL
bool 'pgrep'			CONFIG_USER_PROCPS_PGREP
bool 'pkill'			CONFIG_USER_PROCPS_PKILL
bool 'pmap'			CONFIG_USER_PROCPS_PMAP
bool 'ps'			CONFIG_USER_PROCPS_PS
bool 'pwdx'			CONFIG_USER_PROCPS_PWDX
bool 'skill'			CONFIG_USER_PROCPS_SKILL
bool 'slabtop'			CONFIG_USER_PROCPS_SLABTOP
bool 'snice'			CONFIG_USER_PROCPS_SNICE
bool 'sysctl'			CONFIG_USER_PROCPS_SYSCTL
bool 'tload'			CONFIG_USER_PROCPS_TLOAD
bool 'top'			CONFIG_USER_PROCPS_TOP
bool 'uptime'			CONFIG_USER_PROCPS_UPTIME
bool 'vmstat'			CONFIG_USER_PROCPS_VMSTAT
bool 'w'			CONFIG_USER_PROCPS_W
bool 'watch'			CONFIG_USER_PROCPS_WATCH
if [ "$CONFIG_USER_PROCPS_SLABTOP" = "y" \
	-o "$CONFIG_USER_PROCPS_TOP" = "y" \
	-o "$CONFIG_USER_PROCPS_WATCH" = "y" \
	-o "$CONFIG_USER_HTOP" = "y" \
	]; then
	define_bool 	CONFIG_LIB_NCURSES y
fi

comment 'PCI utilities'
bool 'lspci'			CONFIG_USER_PCIUTILS_LSPCI
bool 'setpci'			CONFIG_USER_PCIUTILS_SETPCI

comment 'USB 3G tools'
bool 'usb3Gtools'                       CONFIG_USER_3G_USBTOOLS
if [ "$CONFIG_USER_3G_USBTOOLS" = "y" ]; then
        define_bool             CONFIG_USER_USBTOOLS_LIBUSB y

        bool '  usb_modeswitch' CONFIG_USER_3G_USBTOOLS_USBMODESWITCH
        bool '  mnet'   CONFIG_USER_3G_USBTOOLS_MNET
        bool '  comgt'  CONFIG_USER_3G_USBTOOLS_COMGT
        bool '  hubctrl'        CONFIG_USER_3G_USBTOOLS_HUBCTRL
        bool '  lsusb'          CONFIG_USER_USBTOOLS_LSUSB
fi

comment 'Java Framework'
bool 'OpenJDK8'          CONFIG_USER_OPENJDK8
if [ "$CONFIG_USER_OPENJDK8" = "y" ]; then
	define_bool CONFIG_LIB_LIBFFI y
	if [ "$CROSS_TARGET" != aarch64-linux ]; then
		define_bool CONFIG_LIB_ZLIB y
	fi
choice 'OpenJDK8 Compact profiles'		"HEADLESS		CONFIG_USER_OPENJDK8_HEADLESS \
	Compact3		CONFIG_USER_OPENJDK8_COMPACT3 \
	Compact2		CONFIG_USER_OPENJDK8_COMPACT2 \
	Compact1		CONFIG_USER_OPENJDK8_COMPACT1" HEADLESS
fi
bool 'Json-C'            CONFIG_USER_JSON_C
bool 'Apache Felix(OSGi Framework)'      CONFIG_APACHE_FELIX_FRAMEWORK
if [ "$CONFIG_APACHE_FELIX_FRAMEWORK" = "y" ]; then
bool 'Setting Felix(OSGi Framework) Run-time ENV'          CONFIG_APACHE_FELIX_RUN_ENV
fi
if [ "$CONFIG_APACHE_FELIX_RUN_ENV" = "y" ]; then
	int 'set maximum Java heap size for JVM Instance(MB)' CONFIG_FELIX_MAX_HEAP 150
	int 'set init Java heap size for JVM Instance(MB)'    CONFIG_FELIX_INIT_HEAP 32
	int 'Java Thread Stack Size(KB)' CONFIG_FELIX_STACK_SIZE 756
fi

comment 'Archive tools'
bool 'p7zip'		CONFIG_USER_P7ZIP_7ZA

comment 'Debug Scripts'
bool 'Debug Scripts'		CONFIG_USER_DBG_SCRIPTS

comment 'led_onoff'
bool 'led_onoff'          CONFIG_USER_LED_ONOFF

comment 'BOA CSRF enable'
bool 'BOA CSRF'		CONFIG_USER_BOA_CSRF

bool 'BOA Fast apply'		CONFIG_BOA_APPLY_FAST
bool 'Firmware Version follow Province Setting' CONFIG_FW_VER_FOLLOW_PROVINCE
endmenu

#############################################################################

mainmenu_option next_comment
comment 'BusyBox'

# Kao added
#bool 'BusyBox'			CONFIG_USER_BUSYBOX_BUSYBOX
choice 'BusyBox'		"1.12.4		CONFIG_USER_BUSYBOX_BUSYBOX1124 \
				1.22.1		CONFIG_USER_BUSYBOX_BUSYBOX1221"

if [ "$CONFIG_USER_BUSYBOX_BUSYBOX" = "y" ]; then
	comment "Applets"	  
	bool 'adjtimex' CONFIG_USER_BUSYBOX_ADJTIMEX
	bool 'ar' CONFIG_USER_BUSYBOX_AR
	bool 'basename' CONFIG_USER_BUSYBOX_BASENAME
	bool 'cat' CONFIG_USER_BUSYBOX_CAT
	bool 'chgrp' CONFIG_USER_BUSYBOX_CHGRP
	bool 'chmod' CONFIG_USER_BUSYBOX_CHMOD
	bool 'chown' CONFIG_USER_BUSYBOX_CHOWN
	bool 'chroot' CONFIG_USER_BUSYBOX_CHROOT
	# bool 'chvt' CONFIG_USER_BUSYBOX_CHVT
	bool 'clear' CONFIG_USER_BUSYBOX_CLEAR
	bool 'cmp' CONFIG_USER_BUSYBOX_CMP
	bool 'cp' CONFIG_USER_BUSYBOX_CP
	# bool 'cpio' CONFIG_USER_BUSYBOX_CPIO
	bool 'cut' CONFIG_USER_BUSYBOX_CUT
	bool 'date' CONFIG_USER_BUSYBOX_DATE
	bool 'dc' CONFIG_USER_BUSYBOX_DC
	bool 'dd' CONFIG_USER_BUSYBOX_DD
	# bool 'deallocvt' CONFIG_USER_BUSYBOX_DEALLOCVT
	bool 'df' CONFIG_USER_BUSYBOX_DF
	bool 'dirname' CONFIG_USER_BUSYBOX_DIRNAME
	bool 'dmesg' CONFIG_USER_BUSYBOX_DMESG
	# bool 'dos2unix' CONFIG_USER_BUSYBOX_DOS2UNIX
	# bool 'dpkg' CONFIG_USER_BUSYBOX_DPKG
	# bool 'deb' CONFIG_USER_BUSYBOX_DPKG_DEB
	bool 'dutmp' CONFIG_USER_BUSYBOX_DUTMP
	bool 'du' CONFIG_USER_BUSYBOX_DU
	# bool 'dumpkmap' CONFIG_USER_BUSYBOX_DUMPKMAP
	bool 'echo' CONFIG_USER_BUSYBOX_ECHO
	bool 'env' CONFIG_USER_BUSYBOX_ENV
	bool 'expr' CONFIG_USER_BUSYBOX_EXPR
	# bool 'fbset' CONFIG_USER_BUSYBOX_FBSET
#	if [ "$CONFIG_USER_BUSYBOX_FBSET" = "y" ]; then
		#bool 'fbset: facny options' CONFIG_USER_BUSYBOX_FBSET_FANCY
		# bool 'fbset: readmode' CONFIG_USER_BUSYBOX_FBSET_READMODE
#	fi
	# bool 'fdflush' CONFIG_USER_BUSYBOX_FDFLUSH
	bool 'find' CONFIG_USER_BUSYBOX_FIND
	if [ "$CONFIG_USER_BUSYBOX_FIND" = "y" ]; then
		bool 'find: -type' CONFIG_USER_BUSYBOX_FIND_TYPE
		bool 'find: -perm' CONFIG_USER_BUSYBOX_FIND_PERM
		bool 'find: -mtime' CONFIG_USER_BUSYBOX_FIND_MTIME
	fi
	bool 'free' CONFIG_USER_BUSYBOX_FREE
	bool 'freeramdisk' CONFIG_USER_BUSYBOX_FREERAMDISK
	bool 'fsck_minix' CONFIG_USER_BUSYBOX_FSCK_MINIX
	bool 'getopt' CONFIG_USER_BUSYBOX_GETOPT
	bool 'grep' CONFIG_USER_BUSYBOX_GREP
	if [ "$CONFIG_USER_BUSYBOX_GREP" = "y" ]; then
		bool 'grep: enable context' CONFIG_USER_BUSYBOX_GREP_CONTEXT
		bool 'grep: egrep alias' CONFIG_USER_BUSYBOX_GREP_EGREP_ALIAS
	fi
	bool 'gunzip' CONFIG_USER_BUSYBOX_GUNZIP
	bool 'gzip' CONFIG_USER_BUSYBOX_GZIP
	bool 'halt' CONFIG_USER_BUSYBOX_HALT
	bool 'head' CONFIG_USER_BUSYBOX_HEAD
	# bool 'hostid' CONFIG_USER_BUSYBOX_HOSTID
	bool 'hostname' CONFIG_USER_BUSYBOX_HOSTNAME
	bool 'id' CONFIG_USER_BUSYBOX_ID
	bool 'ifconfig' CONFIG_USER_BUSYBOX_IFCONFIG
	if [ "$CONFIG_USER_BUSYBOX_IFCONFIG" = "y" ]; then
		bool 'ifconfig: status reporting' CONFIG_USER_BUSYBOX_IFCONFIG_STATUS
		bool 'ifconfig: slip' CONFIG_USER_BUSYBOX_IFCONFIG_SLIP
		bool 'ifconfig: enable hw option' CONFIG_USER_BUSYBOX_IFCONFIG_HW
		bool 'ifconfig: extra options' CONFIG_USER_BUSYBOX_IFCONFIG_MEMSTART_IOADDR_IRQ
	fi
	bool 'init' CONFIG_USER_BUSYBOX_INIT
	if [ "$CONFIG_USER_BUSYBOX_INIT" = "y" ]; then
		bool 'init: use inittab' CONFIG_USER_BUSYBOX_USE_INITTAB
		bool 'init: /linuxrc' CONFIG_USER_BUSYBOX_LINUXRC
		bool 'init: core dumps' CONFIG_USER_BUSYBOX_INIT_COREDUMPS
	fi
	bool 'insmod' CONFIG_USER_BUSYBOX_INSMOD
	if [ "$CONFIG_USER_BUSYBOX_INSMOD" = "y" ]; then
		bool 'insmod: load in kernel memory' CONFIG_USER_BUSYBOX_INSMOD_LOADINKMEM
	fi
	bool 'kill' CONFIG_USER_BUSYBOX_KILL
	bool 'killall' CONFIG_USER_BUSYBOX_KILLALL
	bool 'klogd' CONFIG_USER_BUSYBOX_KLOGD
	bool 'length' CONFIG_USER_BUSYBOX_LENGTH
	bool 'ln' CONFIG_USER_BUSYBOX_LN
	# bool 'loadacm' CONFIG_USER_BUSYBOX_LOADACM
	# bool 'loadfont' CONFIG_USER_BUSYBOX_LOADFONT
	# bool 'loadkmap' CONFIG_USER_BUSYBOX_LOADKMAP
	bool 'logger' CONFIG_USER_BUSYBOX_LOGGER
	bool 'logname' CONFIG_USER_BUSYBOX_LOGNAME
	bool 'ls' CONFIG_USER_BUSYBOX_LS
	if [ "$CONFIG_USER_BUSYBOX_LS" = "y" ]; then
		bool 'ls: show usernames' CONFIG_USER_BUSYBOX_LS_USERNAME
		bool 'ls: show timestamps' CONFIG_USER_BUSYBOX_LS_TIMESTAMPS
		bool 'ls: file types' CONFIG_USER_BUSYBOX_LS_FILETYPES
		bool 'ls: sort files' CONFIG_USER_BUSYBOX_LS_SORTFILES
		bool 'ls: recursive' CONFIG_USER_BUSYBOX_LS_RECURSIVE
		bool 'ls: follow links' CONFIG_USER_BUSYBOX_LS_FOLLOWLINKS
	fi
	bool 'lsmod' CONFIG_USER_BUSYBOX_LSMOD
	bool 'makedevs' CONFIG_USER_BUSYBOX_MAKEDEVS
	bool 'md5sum' CONFIG_USER_BUSYBOX_MD5SUM
	bool 'mkdir' CONFIG_USER_BUSYBOX_MKDIR
	# bool 'mkfifo' CONFIG_USER_BUSYBOX_MKFIFO
	bool 'mkfs_minix' CONFIG_USER_BUSYBOX_MKFS_MINIX
	bool 'mknod' CONFIG_USER_BUSYBOX_MKNOD
	# bool 'mkswap' CONFIG_USER_BUSYBOX_MKSWAP
	bool 'mktemp' CONFIG_USER_BUSYBOX_MKTEMP
	bool 'modprobe' CONFIG_USER_BUSYBOX_MODPROBE
	bool 'more' CONFIG_USER_BUSYBOX_MORE
#	if [ "$CONFIG_USER_BUSYBOX_MORE" = "y" ]; then
		# bool 'more: use termios' CONFIG_USER_BUSYBOX_USE_TERMIOS
#	fi
	bool 'mount' CONFIG_USER_BUSYBOX_MOUNT
	if [ "$CONFIG_USER_BUSYBOX_MOUNT" = "y" ]; then
		bool 'mount: loop devices' CONFIG_USER_BUSYBOX_MOUNT_LOOP
		bool 'mount: support /etc/mtab' CONFIG_USER_BUSYBOX_MTAB_SUPPORT
		bool 'mount: support NFS mounts' CONFIG_USER_BUSYBOX_NFSMOUNT
	fi
	# bool 'mt' CONFIG_USER_BUSYBOX_MT
	bool 'mv' CONFIG_USER_BUSYBOX_MV
	bool 'nc' CONFIG_USER_BUSYBOX_NC
	bool 'nslookup' CONFIG_USER_BUSYBOX_NSLOOKUP
	bool 'pidof' CONFIG_USER_BUSYBOX_PIDOF
	bool 'ping' CONFIG_USER_BUSYBOX_PING
	if [ "$CONFIG_USER_BUSYBOX_PING" = "y" ]; then
		bool 'ping: fancy' CONFIG_USER_BUSYBOX_FANCY_PING
	fi
	bool 'pivot_root' CONFIG_USER_BUSYBOX_PIVOT_ROOT
	bool 'poweroff' CONFIG_USER_BUSYBOX_POWEROFF
	bool 'printf' CONFIG_USER_BUSYBOX_PRINTF
	bool 'ps' CONFIG_USER_BUSYBOX_PS
	bool 'pwd' CONFIG_USER_BUSYBOX_PWD
	bool 'rdate' CONFIG_USER_BUSYBOX_RDATE
	bool 'readlink' CONFIG_USER_BUSYBOX_READLINK
	bool 'reboot' CONFIG_USER_BUSYBOX_REBOOT
	bool 'renice' CONFIG_USER_BUSYBOX_RENICE
	bool 'reset' CONFIG_USER_BUSYBOX_RESET
	bool 'rm' CONFIG_USER_BUSYBOX_RM
	bool 'rmdir' CONFIG_USER_BUSYBOX_RMDIR
	bool 'rmmod' CONFIG_USER_BUSYBOX_RMMOD
	bool 'route' CONFIG_USER_BUSYBOX_ROUTE
	bool 'rpm2cpio' CONFIG_USER_BUSYBOX_RPM2CPIO
	bool 'sed' CONFIG_USER_BUSYBOX_SED
	# bool 'setkeycodes' CONFIG_USER_BUSYBOX_SETKEYCODES
	bool 'shell' CONFIG_USER_BUSYBOX_SHELL
	if [ "$CONFIG_USER_BUSYBOX_SHELL" = "y" ]; then
		bool 'ash:  ASH shell' CONFIG_USER_BUSYBOX_ASH
		bool '      ASH is /bin/sh' CONFIG_USER_BUSYBOX_SH_IS_ASH
		bool 'hush: HUSH shell' CONFIG_USER_BUSYBOX_HUSH
		bool '      HUSH is /bin/sh' CONFIG_USER_BUSYBOX_SH_IS_HUSH
		bool 'lash: LASH shell' CONFIG_USER_BUSYBOX_LASH
		bool '      LASH is /bin/sh' CONFIG_USER_BUSYBOX_SH_IS_LASH
		bool 'msh:  Minix shell' CONFIG_USER_BUSYBOX_MSH
		bool '      MSH is /bin/sh' CONFIG_USER_BUSYBOX_SH_IS_MSH
		bool 'sh: command editing' CONFIG_USER_BUSYBOX_COMMAND_EDITING
		bool 'sh: tab completion' CONFIG_USER_BUSYBOX_TAB_COMPLETION
		bool 'sh: username completion' CONFIG_USER_BUSYBOX_USERNAME_COMPLETION
		bool 'sh: stand alone' CONFIG_USER_BUSYBOX_SH_STANDALONE_SHELL
		if [ "$CONFIG_USER_BUSYBOX_SH_STANDALONE_SHELL" = "y" ]; then
			bool 'sh: applets first' CONFIG_USER_BUSYBOX_SH_APPLETS_ALWAYS_WIN
		fi
		bool 'sh: fancy prompt' CONFIG_USER_BUSYBOX_SH_FANCY_PROMPT
	fi
	bool 'sleep' CONFIG_USER_BUSYBOX_SLEEP
	bool 'sort' CONFIG_USER_BUSYBOX_SORT
	if [ "$CONFIG_USER_BUSYBOX_SORT" = "y" ]; then
		bool 'sort: allow reverse' CONFIG_USER_BUSYBOX_SORT_REVERSE
		bool 'sort: allow unique' CONFIG_USER_BUSYBOX_SORT_UNIQUE
	fi
	bool 'stty' CONFIG_USER_BUSYBOX_STTY
	# bool 'swaponoff' CONFIG_USER_BUSYBOX_SWAPONOFF
	bool 'sync' CONFIG_USER_BUSYBOX_SYNC
	bool 'syslogd' CONFIG_USER_BUSYBOX_SYSLOGD
	if [ "$CONFIG_USER_BUSYBOX_SYSLOGD" = "y" ]; then
		bool 'syslogd: -R' CONFIG_USER_BUSYBOX_REMOTE_LOG
		bool 'syslogd: -C' CONFIG_USER_BUSYBOX_IPC_SYSLOG
	fi
	bool 'tail' CONFIG_USER_BUSYBOX_TAIL
	if [ "$CONFIG_USER_BUSYBOX_TAIL" = "y" ]; then
		bool 'tail: fancy' CONFIG_USER_BUSYBOX_FANCY_TAIL
	fi
	bool 'tar' CONFIG_USER_BUSYBOX_TAR
	if [ "$CONFIG_USER_BUSYBOX_TAR" = "y" ]; then
		bool 'tar: allow creation' CONFIG_USER_BUSYBOX_TAR_CREATE
		bool 'tar: allow exclude' CONFIG_USER_BUSYBOX_TAR_EXCLUDE
		# bool 'tar: allow gzip' CONFIG_USER_BUSYBOX_TAR_GZIP
	fi
	bool 'tee' CONFIG_USER_BUSYBOX_TEE
	bool 'telnet' CONFIG_USER_BUSYBOX_TELNET
	if [ "$CONFIG_USER_BUSYBOX_TELNET" = "y" ]; then
		bool 'telnet: TERM type' CONFIG_USER_BUSYBOX_TELNET_TTYPE
	fi
	bool 'test' CONFIG_USER_BUSYBOX_TEST
	bool 'tftp' CONFIG_USER_BUSYBOX_TFTP
	if [ "$CONFIG_USER_BUSYBOX_TFTP" = "y" ]; then
		bool 'tftp: put' CONFIG_USER_BUSYBOX_TFTP_PUT
		bool 'tftp: get' CONFIG_USER_BUSYBOX_TFTP_GET
	fi
	bool 'top' CONFIG_USER_BUSYBOX_TOP
	bool 'touch' CONFIG_USER_BUSYBOX_TOUCH
	bool 'tr' CONFIG_USER_BUSYBOX_TR
	bool 'traceroute' CONFIG_USER_BUSYBOX_TRACEROUTE
	bool 'true_false' CONFIG_USER_BUSYBOX_TRUE_FALSE
	bool 'tty' CONFIG_USER_BUSYBOX_TTY
	bool 'umount' CONFIG_USER_BUSYBOX_UMOUNT
	if [ "$CONFIG_USER_BUSYBOX_UMOUNT" = "y" ]; then
		bool 'umount: forced unmounts' CONFIG_USER_BUSYBOX_MOUNT_FORCE
	fi
	bool 'uname' CONFIG_USER_BUSYBOX_UNAME
	bool 'uniq' CONFIG_USER_BUSYBOX_UNIQ
	bool 'unix2dos' CONFIG_USER_BUSYBOX_UNIX2DOS
	# bool 'update' CONFIG_USER_BUSYBOX_UPDATE
	bool 'uptime' CONFIG_USER_BUSYBOX_UPTIME
	bool 'usleep' CONFIG_USER_BUSYBOX_USLEEP
	bool 'uudecode' CONFIG_USER_BUSYBOX_UUDECODE
	bool 'uuencode' CONFIG_USER_BUSYBOX_UUENCODE
	bool 'vi' CONFIG_USER_BUSYBOX_VI
	if [ "$CONFIG_USER_BUSYBOX_VI" = "y" ]; then
		bool 'vi: colon commands' CONFIG_USER_BUSYBOX_VI_COLON
		bool 'vi: yank / put / mark' CONFIG_USER_BUSYBOX_VI_YANKMARK
		bool 'vi: search / replace' CONFIG_USER_BUSYBOX_VI_SEARCH
		bool 'vi: catch signals' CONFIG_USER_BUSYBOX_VI_USE_SIGNALS
		bool 'vi: previous command' CONFIG_USER_BUSYBOX_VI_DOT_CMD
		bool 'vi: enable read only' CONFIG_USER_BUSYBOX_VI_READONLY
		bool 'vi: setable options' CONFIG_USER_BUSYBOX_VI_SETOPTS
		bool 'vi: allow :set' CONFIG_USER_BUSYBOX_VI_SET
		bool 'vi: window resizes' CONFIG_USER_BUSYBOX_VI_WIN_RESIZE
	fi
	bool 'watchdog' CONFIG_USER_BUSYBOX_WATCHDOG
	bool 'wc' CONFIG_USER_BUSYBOX_WC
	bool 'wget' CONFIG_USER_BUSYBOX_WGET
	if [ "$CONFIG_USER_BUSYBOX_WGET" = "y" ]; then
		bool 'wget: status bar' CONFIG_USER_BUSYBOX_WGET_STATUSBAR
		bool 'wget: authentication' CONFIG_USER_BUSYBOX_WGET_AUTHENTICATION
	fi
	bool 'which' CONFIG_USER_BUSYBOX_WHICH
	bool 'whoami' CONFIG_USER_BUSYBOX_WHOAMI
	bool 'xargs' CONFIG_USER_BUSYBOX_XARGS
	bool 'yes' CONFIG_USER_BUSYBOX_YES
	
	# Global features go here
	comment "other features"
	# bool 'buffers on stack' CONFIG_USER_BUSYBOX_BUFFERS_GO_ON_STACK
	# bool 'buffers in BSS' CONFIG_USER_BUSYBOX_BUFFERS_GO_IN_BSS
	# bool 'Use devps' CONFIG_USER_BUSYBOX_USE_DEVPS_PATCH
	bool 'Verbose usages' CONFIG_USER_BUSYBOX_VERBOSE_USAGE
	bool 'Auto Width' CONFIG_USER_BUSYBOX_AUTOWIDTH
	# bool 'Silent boot' CONFIG_USER_BUSYBOX_EXTRA_QUIET
	bool 'Post 2.1 kernel modules' CONFIG_USER_BUSYBOX_NEW_MODULE_INTERFACE
	bool 'Pre 2.1 kernel modules' CONFIG_USER_BUSYBOX_OLD_MODULE_INTERFACE
	bool 'Model version checks' CONFIG_USER_BUSYBOX_INSMOD_VERSION_CHECKING
	# bool 'Minix 2' CONFIG_USER_BUSYBOX_MINIX2
	# bool 'Enable --install' CONFIG_USER_BUSYBOX_INSTALLER
	# bool 'Clean up' CONFIG_USER_BUSYBOX_CLEAN_UP
	bool 'Readable sizes' CONFIG_USER_BUSYBOX_HUMAN_READABLE
	# bool 'Locale Support' CONFIG_USER_BUSYBOX_LOCALE_SUPPORT
fi
endmenu

mainmenu_option next_comment
comment 'Tinylogin'

bool 'Tinylogin'		CONFIG_USER_TINYLOGIN_TINYLOGIN

if [ "$CONFIG_USER_TINYLOGIN_TINYLOGIN" = "y" ]; then
	comment 'Applets'
	bool 'adduser' CONFIG_USER_TINYLOGIN_ADDUSER
	bool 'addgroup' CONFIG_USER_TINYLOGIN_ADDGROUP
	bool 'deluser' CONFIG_USER_TINYLOGIN_DELUSER
	bool 'delgroup' CONFIG_USER_TINYLOGIN_DELGROUP
	bool 'login' CONFIG_USER_TINYLOGIN_LOGIN
	if [ "$CONFIG_USER_TINYLOGIN_LOGIN" = "y" ]; then
		bool 'login: /etc/securetty' CONFIG_USER_TINYLOGIN_SECURETTY
	fi
	bool 'su' CONFIG_USER_TINYLOGIN_SU
	bool 'sulogin' CONFIG_USER_TINYLOGIN_SULOGIN
	bool 'passwd' CONFIG_USER_TINYLOGIN_PASSWD
	bool 'getty' CONFIG_USER_TINYLOGIN_GETTY
	# bool 'vlock' CONFIG_USER_TINYLOGIN_VLOCK

	comment 'Features'
	bool 'Shadow passwords' CONFIG_USER_TINYLOGIN_SHADOWPASSWDS
	bool 'md5 passwords' CONFIG_USER_TINYLOGIN_MD5_PASSWORDS
	bool 'sha passwords' CONFIG_USER_TINYLOGIN_SHA1_PASSWORDS
	bool 'Trivial help' CONFIG_USER_TINYLOGIN_TRIVIAL_HELP
	# bool 'Enable --install' CONFIG_USER_TINYLOGIN_INSTALLER
fi

endmenu

#############################################################################

mainmenu_option next_comment
comment 'MicroWindows'

bool 'MicroWindows'		CONFIG_USER_MICROWIN

if [ "$CONFIG_USER_MICROWIN" = "y" ]; then

	comment 'Compiling Options'
	bool 'Optimize'	    CONFIG_USER_MICROWIN_OPTIMIZE
	bool 'Debug'	    CONFIG_USER_MICROWIN_DEBUG
	bool 'Verbose'	    CONFIG_USER_MICROWIN_VERBOSE
	comment 'Libraries'
	bool 'Microwin'     CONFIG_USER_MICROWIN_MICROWIN
	bool 'NanoX'        CONFIG_USER_MICROWIN_NANOX
	bool 'SharedLibs'   CONFIG_USER_MICROWIN_SHAREDLIBS
	bool 'NWidget'      CONFIG_USER_MICROWIN_NWIDGET
	bool 'OBJFramework' CONFIG_USER_MICROWIN_OBJFRAMEWORK
	comment 'Demos'
	bool 'MicrowinDemo' CONFIG_USER_MICROWIN_MICROWINDEMO
	bool 'NanoXDemo'    CONFIG_USER_MICROWIN_NANOXDEMO
	comment 'Applications'
	bool 'NanoWM'       CONFIG_USER_MICROWIN_NANOWM
	comment 'Settings'
	choice 'Screeen PixType' "Packed-8bit-Palette CONFIG_USER_MICROWIN_MWPF_PALETTE \
				Packed-32bit-8/8/8 CONFIG_USER_MICROWIN_MWPF_TRUECOLOR0888 \
				Packed-24bit-8/8/8 CONFIG_USER_MICROWIN_MWPF_TRUECOLOR888 \
				Packed-16bit-5/6/5 CONFIG_USER_MICROWIN_MWPF_TRUECOLOR565 \
				Packed-16bit-5/5/5 CONFIG_USER_MICROWIN_MWPF_TRUECOLOR555 \
				Packed-8bit-3/3/2  CONFIG_USER_MICROWIN_MWPF_TRUECOLOR332 \
				" CONFIG_USER_MICROWIN_MWPF_TRUECOLOR0888
	bool 'Link App into server' CONFIG_USER_MICROWIN_LINK_APP_INTO_SERVER
	bool 'Have File IO' CONFIG_USER_MICROWIN_HAVE_FILEIO
	bool 'Have BMP Support' CONFIG_USER_MICROWIN_HAVE_BMP_SUPPORT
	bool 'Have GIF Support' CONFIG_USER_MICROWIN_HAVE_GIF_SUPPORT
	bool 'Have PNM Support' CONFIG_USER_MICROWIN_HAVE_PNM_SUPPORT
	bool 'Have XPM Support' CONFIG_USER_MICROWIN_HAVE_XPM_SUPPORT
	bool 'Have JPEG Support' CONFIG_USER_MICROWIN_HAVE_JPEG_SUPPORT
	bool 'Have PNG Support' CONFIG_USER_MICROWIN_HAVE_PNG_SUPPORT
	bool 'Have T1LIB Support' CONFIG_USER_MICROWIN_HAVE_T1LIB_SUPPORT
	bool 'Have FreeType Support' CONFIG_USER_MICROWIN_HAVE_FREETYPE_SUPPORT
	bool 'Have SharedMemory Support' CONFIG_USER_MICROWIN_HAVE_SHAREDMEM_SUPPORT
	bool 'Have Han Zi Ku font Support' CONFIG_USER_MICROWIN_HAVE_HZK_SUPPORT
	bool 'Have Big5 Support' CONFIG_USER_MICROWIN_HAVE_BIG5_SUPPORT
	bool 'Have GB2312 Support' CONFIG_USER_MICROWIN_HAVE_GB2312_SUPPORT
	bool 'Have MS Fonts' CONFIG_USER_MICROWIN_HAVEMSFONTS
	bool 'Build Screen Driver only' CONFIG_USER_MICROWIN_NOFONTSORCLIPPING
	bool 'Window Erase Move' CONFIG_USER_MICROWIN_ERASEMOVE
	bool 'Window UpdateRegions Move' CONFIG_USER_MICROWIN_UPDATEREGIONS
	bool 'Gray Palette' CONFIG_USER_MICROWIN_GRAYPALETTE
	comment 'Display Config'
	bool 'X11 Display' CONFIG_USER_MICROWIN_X11
	bool 'Frame Buffer Display' CONFIG_USER_MICROWIN_FRAMEBUFFER
	bool 'Frame Buffer VGA' CONFIG_USER_MICROWIN_FBVGA
	bool 'VT Switch' CONFIG_USER_MICROWIN_VTSWITCH
	bool 'Portrait Mode' CONFIG_USER_MICROWIN_PORTRAIT_MODE
	bool 'Frame Buffer Reverse' CONFIG_USER_MICROWIN_FBREVERSE
	bool 'VGA Lib' CONFIG_USER_MICROWIN_VGALIB
	bool 'HW VGA' CONFIG_USER_MICROWIN_HWVGA
	bool 'Cleopatra VGA' CONFIG_USER_MICROWIN_CLEOVGA
	comment 'Mouse/Touch Screen'
    bool 'GPM Mouse'       CONFIG_USER_MICROWIN_GPMMOUSE
    bool 'Serial Mouse'    CONFIG_USER_MICROWIN_SERMOUSE
    bool 'TP Mouse'        CONFIG_USER_MICROWIN_TPMOUSE
    bool 'TP Helio'        CONFIG_USER_MICROWIN_TPHELIO
    bool 'ADS Mouse'       CONFIG_USER_MICROWIN_ADSMOUSE
    bool 'IPAQ Mouse'      CONFIG_USER_MICROWIN_IPAQMOUSE
    bool 'Harrier Mouse'   CONFIG_USER_MICROWIN_HARRIERMOUSE
    bool 'PSION Mouse'     CONFIG_USER_MICROWIN_PSIONMOUSE
    bool 'uClinux/Palm TS' CONFIG_USER_MICROWIN_UCTSMOUSE
    bool 'Cleopatra Mouse' CONFIG_USER_MICROWIN_CLEOMOUSE
    bool 'No Mouse'        CONFIG_USER_MICROWIN_NOMOUSE
	comment 'Keyboard'
	bool 'TTY Keyboard'    CONFIG_USER_MICROWIN_TTYKBD
	bool 'Scan Keyboard'   CONFIG_USER_MICROWIN_SCANKBD
	bool 'Pipe Keyboard'   CONFIG_USER_MICROWIN_PIPEKBD
	bool 'Cleopatra Keyboard'   CONFIG_USER_MICROWIN_CLEOKBD
	bool 'No Keyboard'     CONFIG_USER_MICROWIN_NOKBD
	comment 'Install These Applications'
	bool 'Landmine' CONFIG_USER_MICROWIN_BIN_LANDMINE
	bool 'Launcher' CONFIG_USER_MICROWIN_BIN_LAUNCHER
	bool 'Move' CONFIG_USER_MICROWIN_BIN_MOVE
	bool 'MTerm' CONFIG_USER_MICROWIN_BIN_MTERM
	bool 'MTest' CONFIG_USER_MICROWIN_BIN_MTEST
	bool 'MTest2' CONFIG_USER_MICROWIN_BIN_MTEST2
	bool 'MUserFd' CONFIG_USER_MICROWIN_BIN_MUSERFD
	bool 'Nano-X' CONFIG_USER_MICROWIN_BIN_NANO_X
	bool 'NanoWM' CONFIG_USER_MICROWIN_BIN_NANOWM
	bool 'NPanel' CONFIG_USER_MICROWIN_BIN_NPANEL
	bool 'NTerm' CONFIG_USER_MICROWIN_BIN_NTERM
	bool 'NTest' CONFIG_USER_MICROWIN_BIN_NTEST
	bool 'NTetris' CONFIG_USER_MICROWIN_BIN_NTETRIS
	bool 'NXclock' CONFIG_USER_MICROWIN_BIN_NXCLOCK
	bool 'NXev' CONFIG_USER_MICROWIN_BIN_NXEV
	bool 'NXkbd' CONFIG_USER_MICROWIN_BIN_NXKBD
	bool 'NXlsclients' CONFIG_USER_MICROWIN_BIN_NXLSCLIENTS
	bool 'NXterm' CONFIG_USER_MICROWIN_BIN_NXTERM
	bool 'NXView' CONFIG_USER_MICROWIN_BIN_NXVIEW
	bool 'Slider' CONFIG_USER_MICROWIN_BIN_SLIDER
	bool 'VNC' CONFIG_USER_MICROWIN_BIN_VNC
	bool 'World' CONFIG_USER_MICROWIN_BIN_WORLD
fi

endmenu

############################################################################
mainmenu_option next_comment
comment 'RTK User applications'

bool 'RTK Bridge Mode Support'		CONFIG_USER_RTK_BRIDGE_MODE
if [ "$CONFIG_USER_RTK_BRIDGE_MODE" = "y" ]; then
    bool ' RTK Repeater Mode Support' CONFIG_USER_RTK_REPEATER_MODE
fi
if [ "$CONFIG_USER_RTK_BRIDGE_MODE" = "y" ]; then
    bool ' RTK Multi Bridge Wan Support' CONFIG_USER_RTK_MULTI_BRIDGE_WAN
fi
if [ "$CONFIG_USER_RTK_BRIDGE_MODE" = "y" ]; then
    bool ' RTK Vlan Passthrough Support' CONFIG_USER_RTK_VLAN_PASSTHROUGH
fi
if [ "$CONFIG_USER_RTK_BRIDGE_MODE" = "y" ]; then
    bool ' RTK Bridge mode macfilter Support' CONFIG_USER_RTK_BRIDGE_MACFILTER_SUPPORT
fi
if [ "$CONFIG_USER_RTK_BRIDGE_MODE" = "y" ]; then
    bool ' RTK Dump Clients Info on Bridge mode Support' CONFIG_USER_DUMP_CLTS_INFO_ON_BR_MODE
fi

bool 'RTK WAN Port Auto Selection Support'		CONFIG_USER_WAN_PORT_AUTO_SELECTION
bool 'RTK RT ACL proof SYN flood attack'                 CONFIG_USER_RT_ACL_SYN_FLOOD_PROOF_SUPPORT
bool 'RTK Block lan query and multicast data Support'		CONFIG_USER_BLOCK_QUERY_AND_MULTICAST_DATA_FROM_LAN
bool 'RTK CTCAPD Support'		CONFIG_USER_CTCAPD
bool 'RTK CTCAPD Test Support'		CONFIG_USER_CTCAPD_TEST
bool 'RTK CTC e-OS Middleware Support'  CONFIG_USER_CTC_EOS_MIDDLEWARE
bool 'RTK IPQoS Support'		CONFIG_USER_IP_QOS
bool 'RTK Smart Roaming Daemon' CONFIG_RTK_SMART_ROAMING
bool 'RTK Multi-AP Daemon' CONFIG_USER_RTK_MULTI_AP
if [ "$CONFIG_USER_RTK_MULTI_AP" = "y" ]; then
	define_bool CONFIG_LIB_LIBSSL y
	bool ' Dynamic Backhaul Link Selection'	CONFIG_USER_RTK_MULTI_AP_BACKHAUL_LINK_SELECTION
	bool ' Role Auto Selection' CONFIG_USER_RTK_MULTI_AP_ROLE_AUTO_SELECTION
	bool ' Multi-AP WFA Logo Test'	CONFIG_USER_RTK_MULTI_AP_WFA
	bool ' MAP GROUP SUPPORT' CONFIG_USER_RTK_MULTI_AP_MAP_GROUP_SUPPORT
fi
bool 'RTK System Log'		CONFIG_USER_RTK_SYSLOG
if [ "$CONFIG_USER_RTK_SYSLOG" = "y" ]; then
	bool '  Remote Log'	CONFIG_USER_RTK_SYSLOG_REMOTE
fi
bool 'RTK WAN Connection Type Support'         CONFIG_USER_RTK_WAN_CTYPE
bool 'RTK System Daemon Support'		CONFIG_USER_RTK_SYSTEMD
bool 'RTK System Configuration Utility'  	CONFIG_USER_RTK_SYSCONF
if [ "$CONFIG_USER_RTK_SYSTEMD" = "y" ]; then
	bool 'PON LinkChange Event Support'			CONFIG_PON_LINKCHANGE_EVENT
	bool 'PON Configuration Complete Event Support  '	CONFIG_PON_CONFIGURATION_COMPLETE_EVENT
fi
bool 'RTK Kernel FW Update Support'         CONFIG_ENABLE_KERNEL_FW_UPDATE
bool 'RTK PPPOE Passthrough Support'        CONFIG_USER_RTK_PPPOE_PASSTHROUGH
bool 'RTK IP Passthrough Support'        CONFIG_USER_RTK_IP_PASSTHROUGH
bool 'PPPoE 2 Intervals Retry Machanism'	CONFIG_USER_PPPOE_2_INTERVALS_RETRY
choice 'Port Grouping Method'	"None	CONFIG_USER_NO_PORT_GROUP \
								RTK_Portmapping	CONFIG_USER_PORTMAPPING \
								RTK_Bridge_Grouping CONFIG_USER_BRIDGE_GROUPING \
								RTK_Interface_Grouping CONFIG_USER_INTERFACE_GROUPING" RTK_Portmapping

bool 'RTK VLAN on LAN Support'      CONFIG_USER_VLAN_ON_LAN
bool 'RTK VLAN Mapping Support' CONFIG_USER_VLAN_MAPPING
bool 'RTK VoIP applications Support'		CONFIG_USER_RTK_VOIP
if [ "$CONFIG_USER_RTK_VOIP" = "y" ]; then
bool 'RTK VoIP test utility'         CONFIG_RTK_VOIP_TEST_TOOL
bool 'RTK H.248'		CONFIG_USER_RTK_H248
# Mason Yu. put new voip
#source ../user/rtk_voip/src/Config.in
fi

bool 'RTL8696 Switch API Library'       CONFIG_USER_APOLLO
if [ "$CONFIG_USER_APOLLO" = "y" ]; then
bool 'DiagShell'      CONFIG_USER_APOLLO_DIAGSHELL
fi

bool 'System Initiating Scripts' CONFIG_INIT_SCRIPTS
bool 'RTK tcp2dev utility'       CONFIG_USER_TCP2DEV
bool 'RTK ethctl utility' CONFIG_USER_ETHCTL
if [ "$CONFIG_USER_CONF_ON_XMLFILE" = "n" ]; then
	bool 'Recover Preserved User Setting on Upgrade' CONFIG_USER_RTK_RECOVER_SETTING
fi
bool 'RTK smuxctl utility' CONFIG_USER_SMUXCTL
bool 'wired 802.1x' CONFIG_USER_WIRED_8021X
if [ "$CONFIG_USER_WIRED_8021X" = "y" ]; then
	define_bool CONFIG_LIB_LIBNL y
fi
bool 'DHCP Server' CONFIG_USER_DHCP_SERVER
if [ "$CONFIG_WIRELESS" = "y" ]; then
bool 'Wireless WAN' CONFIG_USER_RTK_WIRELESS_WAN
bool 'Wireless Limit Associated Client Number' CONFIG_USER_WIRELESS_LIMITED_STA_NUM
bool 'Wireless 11n Coexist' CONFIG_WLAN_11N_COEXIST
fi

if [ "$CONFIG_LUNA" = "y"  -o "$CONFIG_MTD_NAND_LUNA" = "y" -o "$CONFIG_MTD_SPI_NAND_LUNA" = "y" ]; then
	bool "Luna firmware upgrade module" CONFIG_LUNA_FIRMWARE_UPGRADE_SUPPORT
	if [ "$CONFIG_LUNA_FIRMWARE_UPGRADE_SUPPORT" = "y" ]; then
		bool "Copy active to backup image if differs" CONFIG_LUNA_FWU_SYNC
		bool "Check FW signature" CONFIG_LUNA_FWU_SIGNATURE
		if [ "$CONFIG_LUNA_FWU_SIGNATURE" = "y" ]; then
			define_bool     CONFIG_LIB_LIBSSL y
		fi
	fi
	bool 'Luan thread test program ' CONFIG_USER_THREADTEST
fi

bool 'RTK Loopback Detection' CONFIG_USER_RTK_LBD
bool 'RTK ZM8620 ECM utility'         CONFIG_USER_ZM8620_ECMMODE
bool 'Reserve Key Settings'	CONFIG_RESERVE_KEY_SETTING
int 'Lan Port Number'           CONFIG_LAN_PORT_NUM 4
int 'USB interface num'           CONFIG_USB_INTF_NUM 1
bool 'Enable Secondary LAN IP' CONFIG_SECONDARY_IP
bool 'Enable Secondary LAN IPV6' CONFIG_SECONDARY_IPV6
bool 'Enable IGMP-Proxy Sender IP Zero' CONFIG_IGMPPROXY_SENDER_IP_ZERO
bool 'Enable Multicast VLAN' CONFIG_MCAST_VLAN
bool 'Enable LogicPort Remapping Support'                CONFIG_USER_PORT_REMAPPING
if [ "$CONFIG_USER_PORT_REMAPPING" = "y" ]; then
choice 'Type'          "Board_01               CONFIG_USER_PORT_REMAPPING_01" Board_01
fi
bool 'RTK LED test utility'	CONFIG_USER_RTK_LEDTEST
bool 'Enable FTPD Account Management' CONFIG_MULTI_FTPD_ACCOUNT
bool 'Enable SAMBA Account Management' CONFIG_MULTI_SMBD_ACCOUNT
bool 'Enable HTTP DOWNLOAD TEST' CONFIG_HTTP_DOWNLOAD_TEST
bool 'Lan host bandwidth control' CONFIG_USER_LAN_BANDWIDTH_CONTROL
bool 'Lan host bandwidth monitor' CONFIG_USER_LAN_BANDWIDTH_MONITOR
bool 'Lan net info' CONFIG_USER_LANNETINFO
if [ "$CONFIG_USER_LANNETINFO" = "y" ]; then
	bool '    Refine check alive by arp'	CONFIG_USER_REFINE_CHECKALIVE_BY_ARP
fi
bool 'Support Lannetinfo replace empty device name with Anonymous' CONFIG_USER_LANNETINFO_EMPTY_DEVNAME_REPLACE_BY_ANONYMOUS
bool 'Support Lannetinfo collect offline devices' CONFIG_USER_LANNETINFO_COLLECT_OFFLINE_DEVINFO
bool 'Support Lannetinfo collect wlan unassociated station info.' CONFIG_USER_LANNETINFO_COLLECT_WLAN_UNASSOCIATED_DEVINFO
bool 'STB l2 frame loss rate calculate' CONFIG_USER_STBL2FRAMELOSSRATE
bool 'LED Timer' CONFIG_LED_INDICATOR_TIMER
bool 'Sleep Timer' CONFIG_USER_SLEEP_TIMER
bool 'Enable configure LAN port as WAN port' CONFIG_USER_LAN_PORT_AS_ETH_WAN
if [ "$CONFIG_E8B" = "y" ]; then
        define_bool CONFIG_CTC_E8_CLIENT_LIMIT y
	bool 'Support Factory Mode' CONFIG_FACTORY_MODE
fi
bool 'modern traceroute' CONFIG_MODERN_TRACEROUTE

bool 'RTK ramonitor'	 CONFIG_USER_RTK_RAMONITOR
if [ "$CONFIG_USER_RTK_RAMONITOR" = "y" ]; then
	bool 'IPv6 Auto Detect' CONFIG_USER_RTK_IPV6_WAN_AUTO_DETECT
fi
bool 'RTK RA Delegation'   CONFIG_USER_RTK_RA_DELEGATION
bool 'RTK IPv6 Simple Security'   CONFIG_USER_RTK_IPV6_SIMPLE_SECURITY
#This flag is used for single br0 framework
bool 'RTK mulitiple LAN bind mulitiple WAN PD for single br' CONFIG_USER_RTK_IPV6_MULTI_LAN_SERVICE_WITH_SINGLE_BR
bool 'RTK multicast VLAN Support'   CONFIG_USER_RTK_MULTICAST_VID
if [ "$CONFIG_USER_RTK_MULTICAST_VID" = "y" ]; then
    bool 'RTK multicast VLAN for up stream Support'   CONFIG_USER_RTK_MULTICAST_VID_US
fi
bool 'RTK IPV6 interface ID filter Support'   CONFIG_RTK_USER_IPV6_INTERFACEID_FILTER
bool 'NAT ALG pass through' CONFIG_USER_RTK_NAT_ALG_PASS_THROUGH
bool 'RTK DSL Log Capture'	CONFIG_USER_RTK_DSL_LOG
if [ "$CONFIG_USER_RTK_DSL_LOG" = "y" ]; then
	bool '  Send Log to FTP server'	CONFIG_USER_RTK_DSL_LOG_SEND
fi
bool 'RTL8226B User App' CONFIG_USER_RTK_RTL8226B
	if [ "$CONFIG_USER_RTK_RTL8226B" = "y" ]; then
		define_bool CONFIG_LIB_8226B y
	fi
bool 'RTL8367 User App Example' CONFIG_USER_RTK_RTL8367
	if [ "$CONFIG_USER_RTK_RTL8367" = "y" ]; then
		define_bool CONFIG_LIB_8367 y
		define_bool CONFIG_LIB_DAL_RTL8367C y
		define_bool CONFIG_LIB_DAL_RTL8367D y
	fi
bool 'Restrict Process Permission' CONFIG_RESTRICT_PROCESS_PERMISSION
bool 'RTK Dos IcmpRedirection Support' CONFIG_USER_DOS_ICMP_REDIRECTION
bool 'RTK Dos Winnuke Support' CONFIG_USER_DOS_WINNUKE
bool 'DM Feature' CONFIG_USER_DM
if [ "$CONFIG_REMOTE_ADSL_HOST" = "y" ]; then
	bool 'command server support' CONFIG_USER_CMD_SERVER
	if [ "$CONFIG_USER_CMD_SERVER" = "y" ]; then
		bool '  command client side' CONFIG_USER_CMD_CLIENT_SIDE
		bool '  command server side' CONFIG_USER_CMD_SERVER_SIDE
	fi
fi
bool 'RTK fastPassNF (bypass Netfilter)'	 CONFIG_USER_RTK_FASTPASSNF_MODULE
bool 'RTK fastBrPassNF (bypass ebtable Netfilter)'         CONFIG_USER_RTK_FAST_BR_PASSNF_MODULE
bool 'RTK Select Only One Default Gateway (include VPN) By User'	CONFIG_USER_SELECT_DEFAULT_GW_MANUALLY
bool 'RTK Generate Different WAN MAC'		CONFIG_USER_GEN_WAN_MAC
bool 'RTK Nessus Scan fixed'                    CONFIG_USER_RTK_NESSUS_SCAN_FIXED
bool 'RTK DHCPv6 IAID String Print'                    CONFIG_USER_RTK_DHCPV6_IAID_STR
bool 'Quantenna Wifi Ax'			CONFIG_QTNA_WIFI_AX

endmenu
#############################################################################

mainmenu_option next_comment
comment 'Games'

bool 'advent4'		CONFIG_USER_GAMES_ADVENT4
bool 'dungeon'		CONFIG_USER_GAMES_DUNGEON
bool 'mame'		CONFIG_USER_GAMES_XMAME
endmenu

#############################################################################

mainmenu_option next_comment
comment 'Miscellaneous Configuration'

choice 'RAMFS Image'	"None CONFIG_USER_RAMIMAGE_NONE \
			64K CONFIG_USER_RAMIMAGE_RAMFS64 \
			128K CONFIG_USER_RAMIMAGE_RAMFS128 \
			256K CONFIG_USER_RAMIMAGE_RAMFS256 \
			512K CONFIG_USER_RAMIMAGE_RAMFS512 \
			" 64K
bool 'generic cgi'		CONFIG_USER_CGI_GENERIC

if [ "$CONFIG_USER_CGI" = "y" ]; then
	define_bool	CONFIG_LIB_LIBSSL y
fi



if [ "$CONFIG_USER_CGI" = "y" -o "$CONFIG_USER_FIREWALL_TOOLS" = "y" -o "$CONFIG_USER_NEWIFMOND_IFMOND" = "y" ]; then
	define_bool CONFIG_LIB_SNAPGEAR y
fi

bool 'SnapGear Button daemon'	CONFIG_USER_DEMO_BUTTON
bool 'SnapGear Latch daemon'	CONFIG_USER_DEMO_LATCH
bool 'SnapGear Morse demo'	CONFIG_USER_DEMO_MORSE
bool 'SnapGear R2100 daemon'	CONFIG_USER_DEMO_R2100

endmenu

#############################################################################

mainmenu_option next_comment
comment 'Debug Builds'

bool 'build debugable libraries'	CONFIG_LIB_DEBUG
bool 'build debugable applications'	CONFIG_USER_DEBUG
comment "Debug tools"

bool 'tpt'				CONFIG_USER_TIMEPEG_TPT
comment "Debug libraries"
bool 'ccmalloc'				CONFIG_LIB_LIBCCMALLOC
bool '802.11K'				CONFIG_DOT11K_TEST_TOOL
comment "Dot11k test tool"
bool '802.11V'				CONFIG_DOT11V_TEST_TOOL
comment "Dot11v test tool"

endmenu


############################################################################
mainmenu_option next_comment
comment 'G3 RTK User Utility'
bool 'G3 watchdog daemon'         CONFIG_USER_G3_WATCHDOG
bool 'G3 perf tool'               CONFIG_USER_G3_PERF
endmenu
############################################################################
mainmenu_option next_comment
comment 'RTL8686 IPC User Utility'

bool 'RTL8686 IPC User Utility Support'		CONFIG_USER_RTL8686_IPC_UTIL

endmenu
############################################################################

############################################################################
mainmenu_option next_comment
comment 'Choose DSP Image'

choice 'DSP Image'							\
			"SLIC_ON_HOST                   CONFIG_USER_SLIC_ON_HOST
			"
endmenu
############################################################################

if [ "$CONFIG_YUEME" = "y" ]; then
source config_yueme.in
define_bool	CONFIG_USER_RTK_NOSTB_IPTV y
fi

if [ "$CONFIG_CMCC" = "y" ]; then
source config_cmcc.in
fi

if [ "$CONFIG_CU" = "y" ]; then
if [ "$CONFIG_CU_BASEON_YUEME" = "y" ]; then
source config_cu_yueme.in
fi
if [ "$CONFIG_CU_BASEON_CMCC" = "y" ]; then
source config_cu.in
fi
fi

if [ "$CONFIG_CTC_AWIFI_KERNEL_JITUAN" = "y" ]; then
define_bool	CONFIG_CT_AWIFI_JITUAN_FEATURE y
define_bool	CONFIG_CT_AWIFI_JITUAN_SMARTWIFI y
define_bool	CONFIG_CT_AWIFI_UPGRADE y
define_bool	CONFIG_CT_AWIFI_JITUAN_NAT44 y
define_bool	CONFIG_CT_AWIFI_JITUAN_TCPOPT y
fi
